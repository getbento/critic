////
/// @group components-site-header
/// @access public
////

// ============================================================================================================
// =============== SITE : HEADER : VARS =======================================================================
// ============================================================================================================
/// At what breakpoint should the header switch from the mobile version to the desktop version? By default,
/// this just uses `$mobi-expand-breakpoint`, but this value allows you to override this for the header
/// switching only. For added flexibility, this value can be an available key in `$grid-breakpoints`, or it
/// can be an arbitrary number.
/// @type {String | Number}
$site-header-expand-breakpoint: $mobi-expand-breakpoint !default;

/// Background color applied to the site header.
///
/// **Theme Option:** Navigation > Background Color
///
/// @type Color
$site-header-bg-color: #ffffff !default;

/// Background image applied to the site header.
///
/// **Theme Option:** Navigation > Background Image
///
/// @type String
$site-header-bg-image: null !default;

/// Border color applied to various site header elements.
///
/// **Theme Option:** Navigation > Divider > Color
///
/// @type Color
$site-header-border-color: $brand-accent !default;

/// Should we include the shadow effect? If set to `false`, neither the desktop or mobile header will include
/// the drop shadow effect.
///
/// **Theme Option:** Navigation > Add Shadow
///
/// @type Boolean
$site-header-use-shadow: true !default;

/// Box-shadow shorthand to apply to the site headers. Please note, if `$site-header-use-shadow` is set to
/// `false`, this value will be ignored.
/// @type String | Shorthand
$site-header-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.3) !default;

/// The z-index order to place the desktop header.
/// @access private
/// @type Number
$site-header-desktop-z-index: 10 !default;

/// The z-index order to place the mobile header.
/// @access private
/// @type Number
$site-header-mobi-z-index: 40 !default;

/// The z-index order to place the mobile navigation panel.
/// @access private
/// @type Number
$site-header-mobi-panel-z-index: 10 !default;

/// If applicable, should we use a background image for this panel?
/// @type Boolean
$site-header-mobi-panel-use-bg-image: false !default;

/// Background image pattern to apply to the mobi header panel if `$site-header-mobi-panel-use-bg-image` is
/// set to `true`.
/// @type String
$site-header-mobi-panel-bg-image: $site-header-bg-image !default;

/// Vertical padding applied to various site header elements including cart buttons, `.site-header-mobi`,
/// and `.nav-toggle-btn`. Please note, this value should be provided in **REM units only**.
/// @type Number
$site-header-vpadding-rem: bb-calc-gutter(xs) !default;

/// Horizontal padding applied to various site mobile header elements including nav, location, actions, and
/// logo. Please note, this value should be provided in **REM units only**.
/// @type Number
$site-header-mobi-hpadding-rem: bb-calc-gutter(xs) !default;

/// Should we use double or single borders for the various site header elements? If set to `false`, only
/// a single border will be applied.
///
/// **Theme Option:** Navigation > Divider > Double
///
/// **IMPORTANT:** Currently, these values are also applied to `.menu` element dividers. This may change
/// in the future.
///
/// @type Boolean
$site-header-divider-double: true !default;

/// Border stroke weight applied to various site header elements.
///
/// **Theme Option:** Navigation > Divider > Weight
///
/// **IMPORTANT:** Currently, these values are also applied to `.menu` element dividers. This may change
/// in the future.
///
/// @type Number
$site-header-divider-width: 3px !default;

/// This is the total height to be applied to borders when `$site-header-divider-double` is set to `true`.
/// Please note, this **is not** the space between the dividers.
///
/// **IMPORTANT:** Currently, these values are also applied to `.menu` element dividers. This may change
/// in the future.
///
/// @type Number
$site-header-divider-double-spacing: 5px !default;

/// Top positioning of the `.btn-cart` button in the site mobile header.
///
/// **IMPORTANT:** Please note, this button **is only visible** when the header is in its collapsed state.
///
/// @deprecated This variable no longer applies because the button is always vertically centered in the header.
/// @type Number
$site-header-mobi-cart-btn-top: $site-header-vpadding-rem !default;

/// Right positioning of the `.btn-cart` button in the site mobile header. This is useful if you wish to
/// fine-tune the horizontal alignment.
///
/// **IMPORTANT:** Please note, this button **is only visible** when the header is in its collapsed state.
///
/// @type Number
$site-header-mobi-cart-btn-right: null !default;

/// The z-index order to place the `.btn-cart` button in the site mobile header.
///
/// **IMPORTANT:** Please note, this button **is only visible** when the header is in its collapsed state.
///
/// @access private
/// @type Number
$site-header-mobi-cart-btn-z-index: 0 !default;

/// Set this to `true` if the logo should always be stacked above the navigation and centered when
/// visible â€“ and never allowed to be displyed side-by-side regardless of the value assigned to
/// `$site-header-desktop-primary-expand-breakpoint`. Setting this to `false` will allow the logo and
/// navigation to display side-by-side once the `$site-header-desktop-primary-expand-breakpoint`
/// breakpoint has been reached. You can think of this variable as a "force desktop centered always".
///
/// **Theme Option:** Navigation > Desktop Logo Centered
///
/// @type Boolean
$site-logo-desktop-is-centered: false !default;

/// Set this to `true` if the Desktop Navigation becomes sticky.
///
/// **Theme Option:** Navigation > Sticky
///
/// @type Boolean
$site-header-desktop-primary-is-sticky: false !default;

/// Maximum `width` applied to the logo in the site desktop header's default state.
/// @type Number
$site-logo-desktop-max-width: 214px !default;

/// Maximum `height` applied to the logo in the site desktop header's default state.
/// @type Number
$site-logo-desktop-max-height: 65px !default;

/// Maxiumum `width` applied to the logo in the site desktop header's collapsed state.
/// @type Number
$site-logo-desktop-collapsed-max-width: $site-logo-desktop-max-width !default;

/// Maxiumum `height` applied to the logo in the site desktop header's collapsed state.
/// @type Number
$site-logo-desktop-collapsed-max-height: 50px !default;

/// Max-width applied to the logo in **collapsed** state of the site mobile header.
/// @type Number
$site-logo-mobi-collapse-max-width: 90px !default;

/// Max-height applied to the logo in **collapsed** state of the site mobile header.
/// @type Number
$site-logo-mobi-collapse-max-height: 30px !default;

/// Max-width applied to the logo in the site mobile header.
/// @type Number
$site-logo-mobi-max-width: ($site-logo-mobi-collapse-max-width * 1.25) !default;

/// Max-height applied to the logo in the site desktop header.
/// @type Number
$site-logo-mobi-max-height: ($site-logo-mobi-collapse-max-height * 1.25)
  !default;

/// Transition shorthand applied to the logo in the site desktop header. This is used when the logo
/// transitions from the full expanded mobile version to the collapsed mobile version.
/// @type String | Shorthand
$site-logo-mobi-transition: all 0.2s ease-in-out 0s !default;

/// Background color applied to the mobile header's hamburger/toggle btn.
/// @type Color
$site-togglebtn-bg-color: transparent !default;

/// Color applied to the lines in the mobile header's hamburger/toggle btn.
/// @type Color
$site-togglebtn-line-color: $site-header-border-color !default;

/// Width applied to the lines in the mobile header's hamburger/toggle btn.
/// @type Number
$site-togglebtn-line-width: 25px !default;

/// Height applied to the individual lines in the mobile header's hamburger/toggle btn.
/// @type Number
$site-togglebtn-line-height: 3px !default;

/// Vertical spacing applied in between the lines in the mobile header's hamburger/toggle btn.
/// @type Number
$site-togglebtn-line-spacing: 5px !default;

/// Color applied to the mobile header's hamburger/toggle btn `:hover` state.
/// @type Color
$site-togglebtn-active-color: $brand-accent !default;

/// The z-index order to place the hamburger/toggle button in the site mobile header.
/// @access private
/// @type Number
$site-togglebtn-z-index: 20 !default;

/// Vertical spacing applied above the `site-social` instances to provide extra separation between
/// the social accounts and navigation.
/// @type Number
$site-social-vspacing: bb-calc-gutter($breakpoint: xs, $divisor: 1) !default;

/// Margin-bottom applied to the `.site-social`. This is really only visible when the
/// `.site-powered-by` is not set to be sticky.
/// @type Number
$site-social-accounts-margin-bottom: 0.5em !default;

/// Font family stack applied to top-level site navigation and any child elements set to `inherit`.
/// @type String
$site-nav-font-family: $headings-font-family !default;

/// Font weight applied to top-level site navigation and any child elements set to `inherit`. (ex: bold)
///
/// **Theme Option:** Navigation > Weight
///
/// @type String
$site-nav-font-weight: normal !default;

/// Font size applied to top-level site navigation on mobile, and any child elements set to `inherit`.
/// @type Number
$site-nav-mobi-font-size: 1.5rem !default;

/// Font size applied to top-level site navigation on desktop, and any child elements set to `inherit`.
///
/// **Theme Option:** Navigation > Size
///
/// @type Number
$site-nav-desktop-font-size: 0.8rem !default;

/// Text-transform applied to top-level site navigation and any child elements set to `inherit`.
///
/// **Theme Option:** Navigation > Uppercase
///
/// @type Number
$site-nav-text-transform: none !default;

/// Letter-spacing applied to top-level site navigation and any child elements set to `inherit`.
///
/// **Theme Option:** Navigation > Letter Spacing
///
/// @type Number
$site-nav-letter-spacing: 1px !default;

/// Transition shorthand applied to all `.site-nav` button instances.
/// @type String | Shorthand
$site-nav-btn-transition: all $btn-transition-duration $btn-transition-ease 0s
  !default;

/// Text color applied to top-level and child `.site-nav` button instances.
///
/// **Theme Option:** Navigation > Color
///
/// @type Color
$site-nav-btn-color: $brand-primary !default;

/// Text color applied to top-level and child `.site-nav` button instances' `:hover` state.
///
/// **Theme Option:** Navigation > Hover Color
///
/// @type Color
$site-nav-btn-hover-color: $brand-accent !default;

/// Text color applied to top-level and child `.site-nav` button instances' `:active, .is-active` state.
///
/// **Theme Option:** Navigation > Active Color
///
/// @type Color
$site-nav-btn-active-color: $site-nav-btn-hover-color !default;

/// Text color applied to top-level and child `.site-nav` button instances' `:hover` state when the item
/// is also `:active, .is-active`.
/// @type Color
$site-nav-btn-active-hover-color: null !default;

/// Vertical padding applied to top-level desktop `.site-nav` buttons. Please note, **EM units** are used
/// so spacing remains relative according to `font-size`.
/// @type Number
$site-nav-menu-desktop-vpadding: 0.25em !default;

/// Vertical padding applied to top-level mobi `.site-nav` buttons. Please note, **EM units** are used so
/// spacing remains relative according to `font-size`.
/// @type Number
$site-nav-menu-mobi-vpadding: 0.5em !default;

/// Horizontal padding applied to top-level `.site-nav` buttons. Please note, **EM units** are used so
/// spacing remains relative according to `font-size`.
/// @type Number
$site-nav-menu-hpadding: 0.5em !default;

/// Vertical padding applied callout buttons included in the top-level `.site-nav`. Please note,
/// **EM units** are used so spacing remains relative according to `font-size`.
/// @type Number
$site-nav-menu-callout-vpadding: 0.5em !default;

/// Font size applied to child-level `.site-nav` buttons. Please note, **EM units** are used so
/// sizing remains relative to the `font-size` of the top-level parent buttons.
/// @type Number
$site-nav-submenu-font-size: 0.7646em !default;

/// Font weight applied to child-level `.site-nav` buttons. (ex: bold)
/// @type String
$site-nav-submenu-font-weight: bold !default;

/// Text transform applied to child-level `.site-nav` buttons. (ex: uppercase)
/// @type String
$site-nav-submenu-text-transform: uppercase !default;

/// Letter spacing applied to child-level `.site-nav` buttons. (ex: uppercase)
/// @type Number
$site-nav-submenu-letter-spacing: $site-nav-letter-spacing !default;

/// Padding-bottom applied to a `.site-nav` child list. This allows for extra visual separation between
/// a child-level listing and the next top-level button. Please note, **EM units** are used so spacing is
/// relatively to the `font-size` of the top-level parent buttons.
/// @type Number
$site-nav-submenu-bottom-spacing: 1em !default;

/// Text color to apply to the top-level `.site-nav` buttons when they contain children and the list is
/// currently `.is-open`.
/// @type Color
$site-nav-submenu-open-color: $site-nav-btn-active-color !default;

/// Transition shorthand applied to the `.site-nav-submenu` container when the container is **closing**.
///
/// **IMPORTANT:** Please pay special attention to the delay. This transition is intended to happen
/// slightly **before** the next container opens (if applicable).
///
/// @type String | Shorthand
$site-nav-submenu-container-close-transition: all 0.3s
  cubic-bezier(0.165, 0.84, 0.44, 1) 0s !default;

/// Transition shorthand applied to the `.site-nav-submenu` container when the container is **opening**.
///
/// **IMPORTANT:** Please pay special attention to the delay. This transition is intended to happen
/// slightly **after** the previous container closes (if applicable).
///
/// @type String | Shorthand
$site-nav-submenu-container-open-transition: all 0.5s
  cubic-bezier(0.165, 0.84, 0.44, 1) 0.1s !default;

/// Amount to vertically offset the `.site-nav-submenu` container immediately before it opens. This provides
/// the slight *slide up* effect when a submenu is opening. Please note, this value is applied via
/// `transform: translateY(...)`, so the value is relative to the size of the container itself.
/// @type Number
$site-nav-submenu-container-pre-open-offset-y: 1em !default;

/// Vertical padding applied to all child-level `.site-nav` buttons. Please note, **EM units** are used to
/// keep spacing relative to the `font-size` of the child-level button.
/// @type Number
$site-nav-submenu-item-vpadding: 0.25em !default;

/// Horizontal padding applied to all child-level `.site-nav` buttons. Please note, **EM units** are used to
/// keep spacing relative to the `font-size` of the child-level button.
/// @type Number
$site-nav-submenu-item-hpadding: $site-nav-menu-hpadding !default;

/// FontAwesome Icon to use as the top-level toggle icon. When provided, this icon will rotate to display the
/// current state of the submenu. Please note, if you override this in the
/// **Theme Options > Misc > Override Bootstrap Variables** box, the FontAwesome variables will not be available
/// yet. Instead, you need to use the text-based glyph code. For example â€“ `$site-nav-submneu-icon: "\f0ab";`
/// @link http://fontawesome.io/icons/#directional
/// @type String
$site-nav-submenu-icon: $fa-var-angle-down !default;

/// Transform-origin shorthand to apply to the top-level submenu toggle icon (if applicable). This is useful to set
/// an exact center point so the icon doesn't wobble when it rotates.
/// @type Number | Shorthand
$site-nav-submenu-icon-origin: 50% 50% !default;

/// Font-size applied to the `.site-nav-submenu:after` icon in the desktop navigation. Please note, by default the
/// size (and position) is inheritied by the submenu `font-size`. If you adjust this value, you will also need to
/// adjust the corresponding `$site-nav-desktop-submenu-icon-x` and `$site-nav-desktop-submenu-icon-y` values. For
/// most purposes, `1em` or `inherit` will be ideal.
/// @type Number
$site-nav-desktop-submenu-icon-font-size: null !default;

/// Right positioning of the `.site-nav-submenu:after` icon in the desktop navigation. Please note, this value is
/// provided in **EM units** so that the positioning is relative to the `font-size` of the item.
/// @type Number
$site-nav-desktop-submenu-icon-x: -0.4em !default;

/// Top positioning of the `.site-nav-submenu:after` icon in the desktop navigation. Please note, this value is
/// provided in **EM units** so that the positioning is relative to the `font-size` of the item.
/// @type Number
$site-nav-desktop-submenu-icon-y: $site-nav-submenu-item-vpadding !default;

/// Font-size applied to the `.site-nav-submenu:after` icon in the mobi navigation. Please note, by default the
/// size (and position) is inheritied by the submenu `font-size`. If you adjust this value, you will also need to
/// adjust the corresponding `$site-nav-desktop-submenu-icon-x` and `$site-nav-desktop-submenu-icon-y` values. For
/// most purposes, `1em` or `inherit` will be ideal.
$site-nav-mobi-submenu-icon-font-size: null !default;

/// Right positioning of the `.site-nav-submenu:after` icon in the mobile navigation. Please note, this value is
/// provided in **EM units** so that the positioning is relative to the `font-size` of the item.
/// @type Number
$site-nav-mobi-submenu-icon-x: -0.5em !default;

/// Top positioning of the `.site-nav-submenu:after` icon in the mobile navigation. Please note, this value is
/// provided in **EM units** so that the positioning is relative to the `font-size` of the item.
/// @type Number
$site-nav-mobi-submenu-icon-y: $site-nav-menu-mobi-vpadding !default;

/// Transition shorthand to apply to the `.site-nav-submenu:after` icon. This transition the rotation of the icon
/// when its open/close state changes.
///
/// **IMPORTANT:** We are only transitioning the `transform` property here because there is a weird timing bug that
/// happens when the property is set to `all`. For some reason, it introduces a strange delay.
/// @type String | Shorthand
$site-nav-submenu-icon-transition: transform $btn-transition-duration
  $btn-transition-ease 0s !default;

/// Minimum width applied to submenu dropdowns in `.site-header-destkop-primary`. The dropdown is
/// `position:absolute`, so we need to tell it **at least** how wide to be by default.
/// @type Number
$site-nav-submenu-desktop-dropdown-min-width: 160px !default;

/// Background color applied to the submenu dropdowns in `.site-header-desktop-primary`.
/// @type Color
$site-nav-submenu-desktop-dropdown-bg-color: $body-bg !default;

/// Vertical padding applied to the submenu dropdown inner anchors.
/// @type Number
$site-nav-submenu-desktop-dropdown-item-vpadding: 0.5em !default;

/// Horizontal padding applied to the submenu dropdown inner anchors.
/// @type Number
$site-nav-submenu-desktop-dropdown-item-hpadding: 1rem !default;

/// Background color applied the submenu dropdown inner anchors on `:hover`.
/// @type Color
$site-nav-submenu-desktop-drodpwn-item-hover-color: null !default;

/// Vertical padding applied to the submenu dropdowns in `.site-header-desktop-primary`. This is useful
/// because each item has its own top and bottom padding â€“ resulting in subsequent items appearing to
/// have double the spacing between them. By using this value, we can make the first and last item
/// appear to have similar spacing even though they don't have a preceeding or next item respectively.
/// @type Number
$site-nav-submenu-desktop-dropdown-vpadding: $site-nav-submenu-desktop-dropdown-item-vpadding
  !default;

/// Font size to apply to `.site-location` elements in the site mobile header only.
/// @type Number
$site-header-mobi-location-font-size: 1rem !default;

/// Text align to apply to `.site-location` elements in the mobi header.
/// @type String
$site-header-mobi-location-text-align: null !default;

/// Font color applied to `.site-location` in `.site-header-mobi-panel` only. Please note, by default,
/// these styles are intended to inherit/use the same colors as the mobi navigation items.
/// @type Color
$site-header-mobi-panel-location-color: $site-nav-btn-color !default;

/// Color applied to `.site-location:hover` in `.site-header-mobi-panel` only. Please note, by default,
/// these styles are intended to inherit/use the same colors as the mobi navigation items.
/// @type Color
$site-header-mobi-panel-location-hover-color: $site-nav-btn-hover-color !default;

/// Font size to apply to `.site-location` elements in the site desktop header only.
/// @type Number
$site-header-desktop-location-font-size: 0.8rem !default;

/// Font family stack applied to `.site-powered-by` instances.
/// @type String
$site-powered-by-font-family: inherit !default;

/// Font size applied to `.site-powered-by` instances.
/// @type Number
$site-powered-by-font-size: 0.8125rem !default;

/// Font weight applied to `.site-powered-by` instances. (ex: bold)
/// @type String
$site-powered-by-font-weight: normal !default;

/// Text-transform applied to `.site-powered-by` instances. (ex: uppercase)
/// @type String
$site-powered-by-text-transform: none !default;

/// Text color applied to `.site-powered-by` instances.
///
/// **Theme Option:** Powered By Bento > Text Color
///
/// @type Color
$site-powered-by-color: #ffffff !default;

/// Text color applied to `.site-powered-by` instances' `:hover` state.
///
/// **Theme Option:** Powered By Bento > Text Hover Color
///
/// @type Color
$site-powered-by-active-color: $site-nav-btn-hover-color !default;

/// Background color applied to `.site-powered-by` instances.
///
/// **Theme Option:** Powered By Bento > Background Color
///
/// @type Color
$site-powered-by-bg-color: $brand-primary !default;

/// Background image applied to `.site-powered-by` instances.
/// @type String
$site-powered-by-bg-image: null !default;

/// Fixed height applied to sticky `.site-powered-by` instances. Unfortunately, for an element to be sticky in
/// the header context, we have to set a fixed/hard-coded height.
/// @type Number
$site-powered-by-sticky-height: 2.8125rem !default;

/// At what breakpoint should `.site-header-desktop-primary` elements expand? For example â€“ when should the
/// elements go from being stacked to side-by-side? (if applicable) For added flexibility, this value can be
/// an available key in `$grid-breakpoints`, or it can be an arbitrary number.
/// @type String | Number
$site-header-desktop-primary-expand-breakpoint: lg !default;

/// Vertical padding applied to `.site-header-desktop-primary`.
/// @type Number
$site-header-desktop-primary-vpadding: 1rem !default;

/// Allows the export of additional classes/styles that correspond to the `.site-header-desktop-primary--floatable`
/// element and its children. This keeps our CSS as light as possible with the least amount of potential confusion.
/// Please note, you shouldn't avoid setting/overriding this yourself manually. Although, nothing bad can happen,
/// there isn't really a reason to do it. You'll end up with more CSS, and no way to use it.
///
/// **Theme Option:** Navigation > Overlays Hero Image
///
/// @access private
/// @type Boolean
$site-header-desktop-export-floatable-styles: false !default;

/// Background color applied to `.site-header-desktop-primary` in its initial expanded state.
/// @type Color
$site-header-desktop-primary-floatable-expanded-bg-color: transparent !default;

/// If true, generates a simple 2-color vertical (top-to-bottom) linear gradient. The gradient's start color will be
/// automatically set to `$site-header-desktop-primary-floatable-expanded-bg-color` and the end color will be set to
/// `transparent`. Please note, setting this to `true` will override any values applied to
/// `$site-header-desktop-primary-floatable-expanded-bg-image`.
/// @type Boolean
$site-header-desktop-primary-floatable-expanded-bg-use-gradient: false !default;

/// Background image/pattern applied to `.site-header-desktop-primary` in its initial expanded state. Please note,
/// this will be ignored/overriden if `$site-header-desktop-primary-floatable-expanded-bg-use-gradient` is `true`.
/// @type String
$site-header-desktop-primary-floatable-expanded-bg-image: null !default;

/// Text color applied to top-level `.site-nav` buttons inside `.site-header-desktop-primary` in its initial expanded state.
/// @type Color
$site-header-desktop-primary-floatable-expanded-nav-btn-color: null !default;

/// Text color applied to top-level `.site-nav` buttons' `:hover` state inside `.site-header-desktop-primary` in its initial
/// expanded state.
/// @type Color
$site-header-desktop-primary-floatable-expanded-nav-btn-hover-color: null
  !default;

/// Text color applied to top-level `.site-nav` buttons (when `.is-active`) inside `.site-header-desktop-primary` in its initial
/// expanded state.
/// @type Color
$site-header-desktop-primary-floatable-expanded-nav-btn-active-color: null
  !default;

/// Text color applied to top-level `.site-nav` buttons `:hover` state (when `.is-active`) inside `.site-header-desktop-primary`
/// in its initial expanded state.
/// @type Color
$site-header-desktop-primary-floatable-expanded-nav-btn-active-hover-color: null
  !default;

/// If this option is enabled we will export sticky styles
/// **Theme Option:** Navigation > Sticky
///
/// @access private
/// @type Boolean
$site-header-desktop-export-sticky-styles: false !default;

/// Text color applied to top-level `.site-nav-link` and dropdown links when `.site-header-desktop-primary` 
/// is in its collapsed state.
///
/// **Theme Option:** Sticky Header > Color (if Navigation > Sticky is true)
///
/// @type Color
$site-header-desktop-primary-collapsed-nav-color: $site-nav-btn-color !default;

/// Text color applied to top-level `.site-nav-link` and dropdown links `:hover` state when `.site-header-desktop-primary` 
/// is in its collapsed state.
///
/// **Theme Option:** Sticky Header > Hover Color (if Navigation > Sticky is true)
///
/// @type Color
$site-header-desktop-primary-collapsed-nav-hover-color: $site-nav-btn-hover-color !default;

/// Text color applied to top-level `.site-nav-link` and dropdown links `:active, .is-active` when `.site-header-desktop-primary` 
/// is in its collapsed state.
///
/// **Theme Option:** Sticky Header > Active Color (if Navigation > Sticky is true)
///
/// @type Color
$site-header-desktop-primary-collapsed-nav-active-color: $site-nav-btn-active-color !default;

/// Background color applied to `.site-header-desktop-primary` in its collapsed state.
/// @type Color
$site-header-desktop-primary-floatable-collapsed-bg-color: null !default;

/// If true, generates a simple 2-color vertical (top-to-bottom) linear gradient. The gradient's start color will be
/// automatically set to `$site-header-desktop-primary-floatable-collapsed-bg-color` and the end color will be set to
/// `transparent`. Please note, setting this to `true` will override any values applied to
/// `$site-header-desktop-primary-floatable-collapsed-bg-image`.
/// @type Boolean
$site-header-desktop-primary-floatable-collapsed-bg-use-gradient: false !default;

/// Background image/pattern applied to `.site-header-desktop-primary` in its collapsed state. Please note, this will be
/// ignored/overriden if `$site-header-desktop-primary-floatable-collapsed-bg-use-gradient` is `true`.
/// @type String
$site-header-desktop-primary-floatable-collapsed-bg-image: null !default;

/// Text color applied to top-level `.site-nav` buttons inside `.site-header-desktop-primary` in its collapsed state.
/// @type Color
$site-header-desktop-primary-floatable-collapsed-nav-btn-color: null !default;

/// Text color applied to top-level `.site-nav` buttons' `:hover` state inside `.site-header-desktop-primary` in its collapsed state.
/// @type Color
$site-header-desktop-primary-floatable-collapsed-nav-btn-hover-color: null
  !default;

/// Text color applied to top-level `.site-nav` buttons (when `.is-active`) inside `.site-header-desktop-primary` in its collapsed state.
/// @type Color
$site-header-desktop-primary-floatable-collapsed-nav-btn-active-color: null
  !default;

/// Text color applied to top-level `.site-nav` buttons `:hover` state (when `.is-active`) inside `.site-header-desktop-primary`
/// in its collapsed state.
/// @type Color
$site-header-desktop-primary-floatable-collapsed-nav-btn-active-hover-color: null
  !default;

/// At what breakpoint should `.site-header-desktop-secondary` elements expand? For example â€“ when should the
/// elements go from being stacked to side-by-side? (if applicable) For added flexibility, this value can be
/// an available key in `$grid-breakpoints`, or it can be an arbitrary number.
/// @type String | Number
$site-header-desktop-secondary-expand-breakpoint: sm !default;

/// Background color applied to `.site-header-desktop-secondary`.
/// @type Color
$site-header-desktop-secondary-bg-color: lighten($brand-primary, 65%) !default;

/// Background image/pattern applied to `.site-header-desktop-secondary`.
/// @type String
$site-header-desktop-secondary-bg-image: null !default;

/// Font size applied to `.site-header-desktop-secondary`. Please note, all other sizing (for example
/// `$site-header-desktop-secondary-vpadding`) will be relative to this value if you use EM units for those
/// variables.
/// @type Number
$site-header-desktop-secondary-font-size: $site-header-desktop-location-font-size
  !default;

/// Vertical padding applied to `.site-header-desktop-secondary`. Please note, if you assign this value using
/// EM units, it will be relative to `$site-header-desktop-secondary-font-size`.
/// @type Number
$site-header-desktop-secondary-vpadding: 0.5em !default;

/// Text color to apply to `.site-location` elements in the desktop navigation including the address and phone
/// number. Please note, the reason why this has a separate variable is because the `.site-header-desktop-secondary`
/// background can be changed, which does not apply to any other `.site-location` elements other than this one.
///
/// **Theme Option:** Navigation > Address > Font Color
///
/// @type Color
$site-header-desktop-secondary-location-color: $site-header-mobi-panel-location-color
  !default;

/// Text color to apply to `.site-location` elements' `:hover` states in the desktop navigation including the
/// address and phone number. Please note, the reason why this has a separate variable is because the
/// `.site-header-desktop-secondary` background can be changed, which does not apply to any other `.site-location`
/// elements other than this one.
///
/// **Theme Option:** Navigation > Address > Font Hover Color
///
/// @type Color
$site-header-desktop-secondary-location-hover-color: $site-header-mobi-panel-location-hover-color
  !default;

/// Margin top applied to `.site-header-desktop .site-location`. Please note, this value is intended to help
/// you fine-tune to vertical alignment of this column. Also, if you assign this value using EM units,
/// it will be relative to `$site-header-desktop-secondary-font-size`.
/// @type Number
$site-header-desktop-secondary-location-stacked-margin-top: 0.5em !default;

/// Margin bottom applied to `.site-header-desktop .site-location`. Please note, this value can be used to help
/// fine-tune to vertical alignment of this column, but is only really visible when the
/// `.site-header-destkop-secondary` is stacked. Also, if you assign this value using EM units, it will be
/// relative to `$site-header-desktop-secondary-font-size`.
/// @type Number
$site-header-desktop-secondary-location-stacked-margin-bottom: 1em !default;

/// Margin bottom applied to `.site-header-desktop .site-location` when `.site-header-desktop-secondary` is
/// expanded.  Please note, if you assign this value using EM units, it will be relative to
/// `$site-header-desktop-secondary-font-size`.
/// @type Number
$site-header-desktop-secondary-location-exanded-margin-right: 1em !default;

/// Margin left applied to `.btn-cart` when it is visible in `.site-header-desktop-primary`. This allows a
/// little extra control and spacing between `.btn-cart` and the preceeding `.site-social`.
/// @type Number
$site-header-desktop-secondary-cart-btn-margin-left: 0.5em !default;

/// Padding-top applied to `.site-social` in `.site-header-desktop-primary` when the `.btn-cart` is visible.
/// This allows for a little extra control when trying to vertically align the social icons with the
/// `.btn-cart` because they (more than likely) are slightly different heights, and will look better if they
/// appear vertically aligned to the middle.
/// @type Number
$site-header-desktop-secondary-social-vadjust-for-cart: 2px !default;

/// Background color applied to `.site-location` when its an immediate child of `.site-header-mobi`. By
/// default, this is intended to match the styles applied to the desktop secondary address bar.
/// @type Color
$site-header-mobi-location-bg-color: $site-header-desktop-secondary-bg-color
  !default;

/// Background image applied to `.site-location` when its an immediate child of `.site-header-mobi`. By
/// default, this is intended to match the styles applied to the desktop secondary address bar.
/// @type String
$site-header-mobi-location-bg-image: $site-header-desktop-secondary-bg-image
  !default;

/// Vertical padding applied to `.site-location` when its an immediate child of `.site-header-mobi`.
/// @type Number
$site-header-mobi-location-vpadding: $site-header-desktop-secondary-vpadding
  !default;

/// Text color applied to `.site-location` when its an immediate child of `.site-header-mobi`. By default, this
/// is intended to match the styles applied to the desktop secondary address bar.
/// @type Color
$site-header-mobi-location-color: $site-header-desktop-secondary-location-color
  !default;

/// Text applied to `.site-location` elements' `:hover` states when an immediate child of `.site-header-mobi`.
/// By default, this is intended to match the styles applied to the desktop secondary address bar.
/// @type Color
$site-header-mobi-location-hover-color: $site-header-desktop-secondary-location-hover-color
  !default;

/// Font family stack applied to wordmark when no logos are available.
/// @type String
$site-wordmark-font-family: $font-family-base !default;

/// Font size applied to wordmark when no logos are available.
/// @type Number
$site-wordmark-font-size: 1.75rem !default;

/// Font line-height applied to wordmark when no logos are available.
/// @type Number
$site-wordmark-line-height: $line-height !default;

/// Max-width of wordmark (if no logos are available) in desktop header when we have crossed the
/// `$site-header-desktop-primary-expand-breakpoint` breakpoint.
/// @type Number
$site-wordmark-desktop-expanded-max-width: 25% !default;

/// Max-width of wordmark (if no logos are available) in mobi header.
/// @type Number
$site-wordmark-mobi-max-width: 70% !default;

/// Text color applied to wordmark when no logos are available.
/// @type Color
$site-wordmark-color: $site-nav-btn-color !default;

/// Text color applied to wordmark (if no logos are available) on desktop when the `.site-header-desktop-primary`
/// element is expanded and the "floatable" feature is enabled. Please note, this is only applied when the
/// default floatable variable has been assigned and the current page has a valid hero. Otherwise,
/// `site-workmark-color` will be used instead.
/// @type Color
$site-wordmark-desktop-expanded-floatable-color: $site-header-desktop-primary-floatable-expanded-nav-btn-color
  !default;

/// Text color applied to wordmark (if no logos are available) on desktop when the `.site-header-desktop-primary`
/// element is collapsed and the "floatable" feature is enabled. Please note, this is only applied when either of
/// the default expanded/collapsed floatable variables have been assigned and the current page has a valid hero.
/// Otherwise, `site-workmark-color` will be used instead.
/// @type Color
$site-workmark-desktop-collapsed-floatable-color: $site-header-desktop-primary-floatable-collapsed-nav-btn-color
  !default;

$webkit-outline: auto 5px -webkit-focus-ring-color;
$non-webkit-outline: auto 3px Highlight;
%outline {
  outline: $non-webkit-outline;
  outline: $webkit-outline;
}

// ============================================================================================================
// =============== SITE : HEADER : EXPORT =====================================================================
// ============================================================================================================
// Site structural elements.

@mixin bb-export-classes-site-header() {
  // Note: We're not actually using this element, but it is available.
  // .site-header {}

  // =========== SITE : HEADER SPACERS ======================================================================
  // Block: Special Elements: These are used for vertical spacing when header elements are set to "fixed". This
  // ensures (with the help of some javascript) that none of the `.site-content` gets hidden or obscurred
  // under the headers.
  .site-header-spacer {
    // element: .site-header-spacer-desktop - hide it on mobile
    &-desktop {
      display: none;
    }

    // element: .site-header-spacer-mobile - hide it on mobile if its in the default state.
    &-mobile {
      display: none;

      // modifier: only show this spacer element when the mobi collapse modifier is active...so, we
      // have to find the `.site-content` sibling, and the the right child spacer element.
      .site-header-mobi--collapse ~ .site-content > & {
        display: block;
      }
    }

    // breakpoint: mobile expand
    @include bb-mobi-breakpoint-up() {
      // element: .site-header-spacer-desktop - show it on desktop
      &-desktop {
        display: block;
      }

      // element: .site-header-spacer-mobile - hide it on destkop
      &-mobile {
        display: none;

        // modifier: we also have to hide this to match the specificity of the desktop modifier above.
        // We could just use !important, but we want to avoid that whenever possible.
        .site-header-mobi--collapse ~ .site-content > & {
          display: none;
        }
      }
    }
  }

  //ADA: skipping navigation to the main content
  .site-header {
    .skip {
      position: absolute;
      top: -1000px;
      left: -1000px;
      height: 1px;
      width: 1px;
      text-align: left;
      overflow: hidden;
      &:active,
      &:focus,
      &:hover {
        left: 0;
        top: 0;
        width: auto;
        height: auto;
        overflow: visible;
        background-color: black;
        color: white;
        padding: 7px;
        z-index: 1000;
      }
    }
  }
  // =========== SITE : HEADER DESKTOP ======================================================================
  // desktop specific styles
  .site-header-desktop {
    @include bb-position($position: relative, $z-index: $site-header-desktop-z-index);
    @include bb-size($width: 100%);
    display: none;

    // modifier: if marked to be "stickable". The reason this is in a data-attribute instead of a
    // class is because this not only sets css, but is also a specific selector for javascript to
    // jump in and help out.
    &[data-header-sticky] {
      @include bb-position(
        $position: absolute,
        $top: auto,
        $left: if($site-is-boxed, null, 0),
        $right: if($site-is-boxed, null, 0),
        $z-index: $site-header-desktop-z-index
      );

      @if ($site-header-use-shadow) {
        @include bb-prefix-box-shadow($site-header-shadow);
      }

      // modifiers: this is a little ugly, but we have to set whether this is "fixed" or "absolute"
      // based on whether or not `.site-nofications` exists and is empty. This element is fixed if...
      // - `.site-notifications` exist, but are empty.
      // - `.site-notifications` doesn't exists (this is the first child of the parent container)
      // - Or, we are explicitly telling it to be "fixed". This happens via js when `.site-notifications`
      //   exist, but we've scrolled past our "thresold" limit.
      .site-notifications--flushed + .site-header > &,
      .site-header:first-child > &,
      &.site-header-desktop--fixed {
        @include bb-position($position: fixed, $top: 0);
        @include bb-site-boxed-widths();
      }

      // modernizr modifier: if no-js, we want the header to just be static because javascript
      // won't be able to help with vertical positioning, heights and offsets.
      .no-js & {
        @include bb-position($position: static !important);
      }
    }

    // modifier: if no header elements are marked to be "stickable", this modifier is added so we
    // have somewhere to apply our shadow (if applicable). The reason for this is â€“ when any element
    // is marked "stickable", only that specific element gets the shadow. So, without this additional
    // class, there's no way for us to know that this element, nor any of its children aren't stickable.
    &--static {
      @if ($site-header-use-shadow) {
        @include bb-position($position: relative, $z-index: $site-header-desktop-z-index);
        @include bb-prefix-box-shadow($site-header-shadow);
      }
    }

    // breakpoint: desktop
    @include bb-breakpoint-up($site-header-expand-breakpoint) {
      display: block;
    }
  }

  // block: contains the primary navigation and logo
  .site-header-desktop-primary {
    @include bb-size($width: 100%);
    background-color: $site-header-bg-color;
    padding-top: $site-header-desktop-primary-vpadding;
    padding-bottom: $site-header-desktop-primary-vpadding;

    @if ($site-header-bg-image) {
      @include bb-background-pattern-base($image: $site-header-bg-image);
    }

    // immediate child: This element is used for a text-align: justify hack that allows us to avoid having
    // to float the logo left and float the nav right. By doing this, it also allows us to keep the logo and
    // the navigation vertically aligned even though they are completely separate items. Without this hack,
    // the only other ways this is possible is with flexbox or manually positioning elements.
    & > .container {
      text-align: center;
      line-height: 0;

      &:after {
        @include bb-size($width: 100%, $height: 0);
        content: '';
        display: inline-block;
        font-size: 0;
        line-height: 0;
        vertical-align: middle;
      }
    }

    // modifier: .site-header-desktop-primary--collapsed
    // This is the collapsed state of the primary header
    &#{&}--collapsed {
      // child: Please note, we are setting the width and the height and NOT the max-width and max-height as
      // we do on mobile. This avoids a strange rendering issue where the heights of the primary header is
      // repainted, but the logo itself is not â€“ forcing you to do a manual browser resize to force a repaint.
      & .site-logo__btn {
        @include bb-size($width: $site-logo-desktop-collapsed-max-width, $height: $site-logo-desktop-collapsed-max-height);
        line-height: $site-logo-desktop-collapsed-max-height;

        // immediate child: logos
        & > img {
          // if more than one image is provided, the second is the sticky desktop version. So, we hide the
          // default version and show the collapsed version.
          &:last-child:not(:only-child) {
            display: inline-block;
          }

          &:first-child:not(:only-child) {
            display: none;
          }
        }
      }
    }

    // modifier: if marked to be "stickable". The reason this is in a data-attribute instead of a class is
    // because this not only sets css, but is also a specific selector for javascript to jump in and help out. Please
    // note, the initial state of a sticky primary header is to be positioned absolute, not not fixed!
    &[data-header-sticky] {
      @include bb-position(
        $position: absolute,
        $top: 0,
        $left: if($site-is-boxed, null, 0),
        $right: if($site-is-boxed, null, 0),
        $z-index: $site-header-desktop-z-index
      );
      @include bb-prefix-transform(translateZ(0));

      @if ($site-header-use-shadow) {
        @include bb-prefix-box-shadow($site-header-shadow);
      }

      // modifier: if sticky and collapsed, set to fixed.
      &.site-header-desktop-primary--collapsed {
        @include bb-position($position: fixed, $top: 0);
        @include bb-site-boxed-widths();
      }

      // modernizr modifier: if no-js, we want the header to just be static because javascript won't be able to
      // help with vertical positioning, heights and offsets.
      .no-js & {
        @include bb-position($position: static !important);
      }
    }

    // note: don't even bother exporting these styles if the feature isn't being used. but, be aware, this has the potential
    // to export a lot of additional high-specificity styles due to all the modifiers and sub-components effected.
    // `Theme Options > Navigation > Overlays Hero Images`
    @if $site-header-desktop-export-floatable-styles {
      // modifier: .site-header-desktop-primary--floatable
      // This is only added the Theme Options feature is enabled and there is a valid hero on the current page.
      &--floatable {
        @include bb-position(
          $position: absolute,
          $left: if($site-is-boxed, null, 0),
          $right: if($site-is-boxed, null, 0),
          $z-index: 0
        );

        // applies variant colors to modified block element and all child components.
        @include bb-desktop-primary-floatable-variant(
          $bg-color: $site-header-desktop-primary-floatable-expanded-bg-color,
          $bg-use-gradient: $site-header-desktop-primary-floatable-expanded-bg-use-gradient,
          $bg-image: $site-header-desktop-primary-floatable-expanded-bg-image,
          $nav-btn-color: $site-header-desktop-primary-floatable-expanded-nav-btn-color,
          $nav-btn-hover-color: $site-header-desktop-primary-floatable-expanded-nav-btn-hover-color,
          $nav-btn-active-color: $site-header-desktop-primary-floatable-expanded-nav-btn-active-color,
          $nav-btn-active-hover-color: $site-header-desktop-primary-floatable-expanded-nav-btn-active-hover-color
        );

        // modifier: .site-header-desktop-primary--floatable.site-header-desktop-primary--collapsed
        &.site-header-desktop-primary--collapsed {
          @include bb-desktop-primary-floatable-variant(
            $bg-color: $site-header-desktop-primary-floatable-collapsed-bg-color,
            $bg-use-gradient: $site-header-desktop-primary-floatable-collapsed-bg-use-gradient,
            $bg-image: $site-header-desktop-primary-floatable-collapsed-bg-image,
            $nav-btn-color: $site-header-desktop-primary-floatable-collapsed-nav-btn-color,
            $nav-btn-hover-color: $site-header-desktop-primary-floatable-collapsed-nav-btn-hover-color,
            $nav-btn-active-color: $site-header-desktop-primary-floatable-collapsed-nav-btn-active-color,
            $nav-btn-active-hover-color: $site-header-desktop-primary-floatable-collapsed-nav-btn-active-hover-color
          );
        }
      }
    }

    @if $site-logo-desktop-is-centered != true {
      // breakpoint: expand primary element only! Unaffected by mobi breakpoint.
      @include bb-breakpoint-up($site-header-desktop-primary-expand-breakpoint) {
        & > .container {
          text-align: justify;
        }
      }
    } @else {
      // breakpoint: expand primary element only! Unaffected by mobi breakpoint.
      @include bb-breakpoint-up($site-header-desktop-primary-expand-breakpoint) {
        // Note: Even if the desktop header is supposed to be centered (via theme options), we still want to
        // force the side-by-side layout when the desktop header is collapsed. Also, please note that this
        // rule is EXACTLY the same as the above if centering was not enabled. So, if you change one of these
        // rules, makes sure you change the other to match!
        &#{&}--collapsed > .container {
          text-align: justify;
        }
      }
    }
  }

  // block: contains our address, social media accounts, and cart button (if applicable)
  .site-header-desktop-secondary {
    @include bb-size($width: 100%);
    font-size: $site-header-desktop-secondary-font-size;
    background-color: $site-header-desktop-secondary-bg-color;
    padding-top: $site-header-desktop-secondary-vpadding;
    padding-bottom: $site-header-desktop-secondary-vpadding;

    @if $site-header-desktop-secondary-bg-image != null {
      @include bb-background-pattern-base($image: $site-header-desktop-secondary-bg-image);
    }

    // modifier: .site-header-desktop-secondary--fixed
    &[data-header-sticky] {
      @include bb-position(
        $position: absolute,
        $top: 0,
        $left: if($site-is-boxed, null, 0),
        $right: if($site-is-boxed, null, 0),
        $z-index: $site-header-desktop-z-index
      );

      @if ($site-header-use-shadow) {
        @include bb-prefix-box-shadow($site-header-shadow);
      }

      // modifiers: this is a little ugly, but we have to set whether this is "fixed" or "absolute"
      // based on whether or not `.site-nofications` exists and is empty. This element is fixed if...
      // - `.site-notifications` exist, but are empty.
      // - `.site-notifications` doesn't exists (this is the first child of the parent container)
      // - Or, we are explicitly telling it to be "fixed". This happens via js when `.site-notifications`
      //   exist, but we've scrolled past our "thresold" limit.
      .site-notifications--flushed + .site-header &,
      .site-header:first-child &,
      &.site-header-desktop-secondary--fixed {
        @include bb-position($position: fixed, $top: 0);
        @include bb-site-boxed-widths();
      }

      // modernizr modifier: if no-js, we want the header to just be static because javascript won't be
      // able to help with vertical positioning, heights and offsets.
      .no-js & {
        @include bb-position($position: static !important);
      }
    }

    // element: .site-header-desktop-secondary__actions
    // This element holds the social media icons and cart button (when applicable)
    &__actions {
      @include make-col;
      @include make-col-span(12);
      text-align: center;

      // child: cart button
      & .btn-cart {
        margin-left: $site-header-desktop-secondary-cart-btn-margin-left;
        vertical-align: top;
      }

      // breakpoint: secondary expand. this is not affected by the mobi breakpoint
      @include bb-breakpoint-up($site-header-desktop-secondary-expand-breakpoint) {
        text-align: right;

        // modifier: if this is not the only child, make it half the width. If it is, the only child,
        // its fine to take up 100% of the width.
        &:not(:only-child) {
          @include make-col-span(6);
        }
      }
    }
  }
  // =========== SITE : HEADER MOBI =========================================================================
  // mobi specific styles
  .site-header-mobi {
    @include bb-size($width: 100%);
    @include bb-position($position: relative, $z-index: $site-header-mobi-z-index);
    background-color: $site-header-bg-color;
    padding-top: $site-header-vpadding-rem;
    padding-bottom: $site-header-vpadding-rem;
    -webkit-transform: translateZ(
      0
    ); // bugfix: background becomes invisible during css transitions.

    @if ($site-header-bg-image) {
      @include bb-background-pattern-base($image: $site-header-bg-image);
    }
    @if ($site-header-use-shadow) {
      @include bb-prefix-box-shadow($site-header-shadow);
    }

    // modifier
    &--collapse & {
      @include bb-position(
        $position: fixed,
        $top: 0,
        $left: if($site-is-boxed, null, 0),
        $right: if($site-is-boxed, null, 0)
      );
      @include bb-site-boxed-widths();
    }

    // breakpoint: desktop
    @include bb-breakpoint-up($site-header-expand-breakpoint) {
      display: none;
    }
  }

  // mobi nav panel
  .site-header-mobi-panel {
    @include bb-position($position: fixed, $bottom: 100%, $left: 0, $z-index: $site-header-mobi-panel-z-index);
    @include bb-size($width: 100%);
    @include bb-prefix-transform(translateY(0));
    @include bb-prefix-transition(transform 0.5s cubic-bezier(0.77, 0, 0.175, 1) 0s);
    background-color: $site-header-bg-color;
    overflow: hidden;
    // important: we can't just display:none here because we need the height to always be accessible.
    visibility: hidden;

    // optionally use a background image
    @if $site-header-mobi-panel-use-bg-image == true {
      @include bb-background-pattern-base($image: $site-header-mobi-panel-bg-image);
    }

    // element: body modifier
    &__inner {
      @include bb-size($min-height: 100%);
      padding-bottom: $site-powered-by-sticky-height;
    }

    // modifier
    &#{&}--open {
      @include bb-prefix-transform(translateY(100%));
      overflow: auto;
      -webkit-overflow-scrolling: touch;
    }

    // modifier
    &#{&}--show {
      visibility: visible;
    }
  }

  // =========== SITE : LOGO ================================================================================
  // block
  .site-logo {
    // element
    &__btn {
      @include bb-prefix-transition($site-logo-mobi-transition);
      display: block;
      text-align: center;

      // immediate child
      & > img {
        @include bb-size($max-width: 100%, $height: auto, $max-height: 100%);
        display: inline-block;

        // pseudo modifier: hide the last child if there is more than one image â€“ which would be the sticky mobile image.
        &:last-child:not(:only-child) {
          display: none;
        }
      }
    }

    // parent modifier: desktop
    .site-header-desktop & {
      @include bb-size($width: auto);
      margin: 0 auto 1rem;

      // element
      &__btn {
        @include bb-size($width: $site-logo-desktop-max-width, $height: $site-logo-desktop-max-height);
        @include bb-hmargins-auto;
        line-height: $site-logo-desktop-max-height;
      }

      @if $site-logo-desktop-is-centered != true {
        // breakpoint: primary-expand
        @include bb-breakpoint-up($site-header-desktop-primary-expand-breakpoint) {
          display: inline-block;
          margin-bottom: 0;

          &__btn {
            text-align: left;
          }
        }
      }
    }

    @if $site-logo-desktop-is-centered == true {
      // parent modifier: desktop-primary in collapsed state
      // Note: Even if the desktop header is supposed to be centered (via theme options), we still want to
      // force the side-by-side layout when the desktop header is collapsed. The breakpoint and corresponding
      // rules are EXACTLY THE SAME as if centering was not enabled. So, if you change this or the above code,
      // please also make sure the other matches.
      .site-header-desktop-primary.site-header-desktop-primary--collapsed & {
        // breakpoint: primary-expand
        @include bb-breakpoint-up($site-header-desktop-primary-expand-breakpoint) {
          display: inline-block;
          margin-bottom: 0;

          &__btn {
            text-align: left;
          }
        }
      }
    }

    // parent modifier: mobi
    .site-header-mobi & {
      @include bb-size($width: 100%);
      display: block;
      padding-left: $site-header-mobi-hpadding-rem;
      padding-right: $site-header-mobi-hpadding-rem;
      margin-left: 0;

      // element
      &__btn {
        // chrome/firefox bugfix: <img> max-height not respected unless a parent value (apprently any value) is set in a real unit. (not %)
        @include bb-size($height: 1000px);
        @include bb-size($max-width: $site-logo-mobi-max-width, $max-height: $site-logo-mobi-max-height);
        line-height: $site-logo-mobi-max-height;
        // Note: Both text-align and margin-left are required to center/align the logo. The container has margins,
        // and the image inside the container respects text-align.
        text-align: left;
      }
    }

    // parent modifier: mobi--collapse
    .site-header-mobi--collapse .site-header-mobi & {
      &__btn {
        @include bb-size($max-width: $site-logo-mobi-collapse-max-width, $max-height: $site-logo-mobi-collapse-max-height);
        @include bb-prefix-transform(translateX(0%));
        line-height: $site-logo-mobi-collapse-max-height;

        // immediate child
        & > img {
          // if more than one image is provided, the second is the sticky mobile version.
          // So, we hide the desktop version and show the mobile version.
          &:last-child:not(:only-child) {
            display: inline-block;
          }

          &:first-child:not(:only-child) {
            display: none;
          }
        }
      }
    }
  }

  // =========== SITE : WORDMARK ============================================================================
  // block: when a logo isn't available
  .site-wordmark {
    @include bb-gutters;
    display: block;

    // element: .site-wordmark__btn
    &__btn {
      font-family: $site-wordmark-font-family;
      font-size: $site-wordmark-font-size;
      line-height: $site-wordmark-line-height;
      color: $site-wordmark-color;
      text-decoration: none;

      // psudeo modifier
      &:hover {
        color: inherit;
        text-decoration: none;
      }

      // note: don't even bother exporting these styles if the feature isn't being used.
      @if $site-header-desktop-export-floatable-styles {
        .site-header-desktop-primary--floatable & {
          color: $site-wordmark-desktop-expanded-floatable-color;
        }

        .site-header-desktop-primary--floatable.site-header-desktop-primary--collapsed
          & {
          color: $site-workmark-desktop-collapsed-floatable-color;
        }
      }
    }

    // parent modifier: desktop
    .site-header-desktop & {
      $maxwidth: 500px;

      @include bb-hmargins-auto;
      text-align: center;
      margin-bottom: ($spacer / 2);

      // we want the max-width to match our `container-xss xs` value, but we can't be 100% sure it
      // exists. so, we first have to attempt to retrieve it. if it doesn't exist, we're just gonna
      // use the hard-coded `500px` local variable.
      @if map-has-key($additional-containers, container-xxs) {
        $container: map-get($additional-containers, container-xxs);
        @if map-has-key($container, xs) {
          $maxwidth: map-get($container, xs);
        }
      }
      @include bb-size($max-width: $maxwidth);

      // if not centered, we have to allow the expand (side-by-side) to work properly. Please note, this rule
      // is exactly the same as the rule below (when collapsed).
      @if $site-logo-desktop-is-centered != true {
        // breakpoint: when we go from stacked to side-by-side
        @include bb-breakpoint-up($site-header-desktop-primary-expand-breakpoint) {
          @include bb-size($max-width: $site-wordmark-desktop-expanded-max-width);
          display: inline-block;
          vertical-align: middle;
          text-align: left;
          padding-left: 0;
          margin-bottom: 0;
        }
      }
    }

    @if $site-logo-desktop-is-centered == true {
      // parent modifier: desktop-primary in collapsed state
      // Note: Even if the desktop header is supposed to be centered (via theme options), we still want to
      // force the side-by-side layout when the desktop header is collapsed. The breakpoint and corresponding
      // rules are EXACTLY THE SAME as if centering was not enabled. So, if you change this or the above code,
      // please also make sure the other matches.
      //
      // please note, this rule is exactly the same as the rule above (at the primary expand breakpoint)
      .site-header-desktop-primary.site-header-desktop-primary--collapsed & {
        @include bb-size($max-width: $site-wordmark-desktop-expanded-max-width);
        display: inline-block;
        vertical-align: middle;
        text-align: left;
        padding-left: 0;
        margin-bottom: 0;
      }
    }

    // parent modifier: mobi
    .site-header-mobi & {
      @include bb-size($max-width: $site-wordmark-mobi-max-width);
    }
  }

  // =========== SITE : LOCATION ============================================================================
  // block
  .site-location {
    text-align: center;

    // elements: shared children
    &__address,
    &__tel {
      display: block;
      text-decoration: none;

      @include hover-focus-active() {
        text-decoration: none;
      }
    }

    // element
    // note: the <span>s force the text-bar cursor for some reason, so we're forcing it back.
    &__address {
      cursor: pointer;
    }

    // parent modifier: desktop
    .site-header-desktop & {
      @include make-col;
      @include make-col-span(12);
      margin-top: $site-header-desktop-secondary-location-stacked-margin-top;
      margin-bottom: $site-header-desktop-secondary-location-stacked-margin-bottom;

      // elements: shared children
      &__address,
      &__tel {
        color: $site-header-desktop-secondary-location-color;

        @include hover-focus-active() {
          color: $site-header-desktop-secondary-location-hover-color;
        }
      }

      // child: make sure that the line breaks only happen where we want them to.
      & span {
        white-space: nowrap;
      }

      // breakpoint: secondary expand
      @include bb-breakpoint-up($site-header-desktop-secondary-expand-breakpoint) {
        @include make-col-span(6);
        text-align: left;
        margin-bottom: 0;

        // elements: .site-location__tel, .site-location__address
        &__tel,
        &__address {
          display: inline-block;
        }

        // element: .site-location__address
        &__address {
          margin-right: $site-header-desktop-secondary-location-exanded-margin-right;
        }
      }

      // modifier: if no .site-social is present in the .site-header-desktop
      &:only-child {
        @include bb-size(100%);
        text-align: center;
        margin-top: 0;
        margin-bottom: 0;
      }
    }

    // parent modifier: mobi
    // note: these styles are shared between the immediate .site-header-mobi child and the
    // .site-header-mobi-panel child
    .site-header-mobi & {
      font-size: $site-header-mobi-location-font-size;
      text-align: $site-header-mobi-location-text-align;
      padding-left: $site-header-mobi-hpadding-rem;
      padding-right: $site-header-mobi-hpadding-rem;

      // element
      &__tel {
        display: none;
      }
    }

    // immediate parent modifier: mobi (in expanded state)
    .site-header-mobi > & {
      background-color: $site-header-mobi-location-bg-color;
      padding-top: $site-header-mobi-location-vpadding;
      padding-bottom: $site-header-mobi-location-vpadding;
      margin-top: $site-header-vpadding-rem;
      margin-bottom: (
        $site-header-vpadding-rem * -1
      ); // negate .site-header-mobi bottom padding

      @if $site-header-mobi-location-bg-image != null {
        @include bb-background-pattern-base($image: $site-header-mobi-location-bg-image);
      }

      // elements: shared children
      & .site-location__address,
      & .site-location__tel {
        color: $site-header-mobi-location-color;

        @include hover-focus-active() {
          color: $site-header-mobi-location-hover-color;
        }
      }

      // parent modifier mobi--collapse
      .site-header-mobi--collapse & {
        display: none;
      }
    }

    // parent modifier: mobi (in navigation panel)
    .site-header-mobi-panel & {
      margin-top: bb-calc-gutter($breakpoint: xs);

      // elements: shared children
      &__address,
      &__tel {
        color: $site-header-mobi-panel-location-color;

        @include hover-focus-active() {
          color: $site-header-mobi-panel-location-hover-color;
        }
      }
    }
  }

  // =========== SITE : ACTION BTN CONTAINERS ===============================================================
  .site-header-action {
    // parent modifier: mobi
    .site-header-mobi & {
      padding-left: $site-header-mobi-hpadding-rem;
      padding-right: $site-header-mobi-hpadding-rem;
    }
  }

  // =========== SITE : NAV =================================================================================
  .site-nav {
    font-family: $site-nav-font-family;
    font-weight: $site-nav-font-weight;
    font-size: $site-nav-mobi-font-size;
    text-transform: $site-nav-text-transform;
    letter-spacing: $site-nav-letter-spacing;
    text-align: center;

    // shared styles
    & ul {
      @include list-unstyled;
    }

    // shared containers
    & ul,
    & li {
      display: block;
    }

    & a,
    & a:hover,
    & button,
    & button:hover {
      text-decoration: none;
    }

    // child: this only is possible when a primary or secondary button is included in the mobi navigation.
    // note: this is derived from Bootstrap's .btn-link class.
    & button:not(.btn) {
      @include bb-prefix-border-radius(0);
      font-weight: inherit;
      text-transform: inherit;

      &,
      &:active,
      &.active,
      &:disabled {
        @include bb-prefix-box-shadow(none);
        background-color: transparent;
      }
      &,
      &:focus,
      &:active {
        border-color: transparent;
      }
      @include hover {
        border-color: transparent;
      }
    }

    // top-level menus items
    &-menu > li > a,
    &-menu > li.site-nav-submenu > button.site-nav-submenu-toggle,
    &-submenu > span,
    &-submenu > a {
      padding: $site-nav-menu-mobi-vpadding $site-nav-menu-hpadding;

      // breakpoint: mobi expand
      @include bb-mobi-breakpoint-up() {
        padding-top: $site-nav-menu-desktop-vpadding;
        padding-bottom: $site-nav-menu-desktop-vpadding;
      }
    }

    // top-level menus items with .btn
    // We need to maintain the spacing between items, and there can only ever
    // be one .btn â€“ so its ok to apply it to the margin-left.
    &-menu > li > .btn {
      // text-transform: $site-nav-text-transform;
      padding: $site-nav-menu-callout-vpadding $site-nav-menu-hpadding;
      margin-left: $site-nav-menu-hpadding;
      // margin-right: $site-nav-menu-hpadding;
    }

    // all buttons
    &-menu a:not(.btn),
    &-menu button:not(.btn),
    &-submenu > span,
    &-submenu > a {
      @include bb-prefix-transition($site-nav-btn-transition);
      display: inline-block;
      color: $site-nav-btn-color;

      &:hover {
        color: $site-nav-btn-hover-color;
      }
    }

    &-menu button {
      letter-spacing: inherit;
    }

    // <li> modifiers: active
    & .is-active > a,
    & .is-active > button,
    & .is-active > span {
      color: $site-nav-btn-active-color;

      &:hover {
        color: $site-nav-btn-active-hover-color;
      }
    }

    // breakpoint: mobi expand
    @include bb-mobi-breakpoint-up() {
      font-size: $site-nav-desktop-font-size;
    }

    // parent modifier: desktop
    .site-header-desktop & {
      @include bb-position($position: relative, $z-index: 1);
      vertical-align: middle;
      line-height: $line-height; // important: this ensure everything lines up correctly.

      // breakpoint: primary expand
      @include bb-breakpoint-up($site-header-desktop-primary-expand-breakpoint) {
        display: inline-block;
      }
    }

    // parent modifier: mobi
    .site-header-mobi & {
      padding: 4rem $site-header-mobi-hpadding-rem 1.5rem;
    }
  }

  // .site-nav child
  .site-nav-menu {
    margin-bottom: 0;

    // parent modifier: desktop
    .site-header-desktop & {
      & > li {
        display: inline-block;
      }
    }
  }

  // .site-nav child
  .site-nav-submenu {
    // immediate child: label
    &:focus {
      @extend %outline;
    }

    & .btn.site-nav-submenu-toggle {
      margin-left: 0;
    }

    & .site-nav-submenu-toggle {
      @include bb-position($position: relative, $z-index: 0);
      @include bb-prefix-transition($site-nav-btn-transition);
      color: $site-nav-btn-color;
      letter-spacing: inherit;
      background-color: transparent;
      border: none;
      cursor: pointer;
      vertical-align: baseline;

       &:hover {
        color: $site-nav-btn-hover-color;
      }

      // pseudo: label arrow icon
      @if $site-nav-submenu-icon {
        &:after {
          @include fa-icon;
          @include bb-position($position: absolute, $z-index: 0);
          @include bb-prefix-transform-origin($site-nav-submenu-icon-origin);
          @include bb-prefix-transition($site-nav-submenu-icon-transition);
          content: $site-nav-submenu-icon;
          color: inherit;
          line-height: $line-height;
          letter-spacing: 0;

          // parent modifier: desktop
          .site-header-desktop & {
            @include bb-position($top: $site-nav-desktop-submenu-icon-y, $right: $site-nav-desktop-submenu-icon-x);
            font-size: $site-nav-desktop-submenu-icon-font-size;
          }

          // parent modifier: mobi
          .site-header-mobi & {
            @include bb-position($top: $site-nav-mobi-submenu-icon-y, $right: $site-nav-mobi-submenu-icon-x);
            font-size: $site-nav-mobi-submenu-icon-font-size;
          }
        }
      }
    }

    // immediate child: list container
    & > div {
      // 10.20.16: Removing transition/animation to address mobile performance issue.
      // @include bb-prefix-transition($site-nav-submenu-container-close-transition);
      @include bb-prefix-transform(translateY($site-nav-submenu-container-pre-open-offset-y));
      @include bb-size($height: 0);
      overflow: hidden;
      opacity: 0;
      display: none;

      // just in case of no javascript, force them all open!
      .no-js & {
        @include bb-size($height: auto !important);
        @include bb-prefix-transform(translateY(0) !important);
        display: block !important;
        opacity: 1 !important;
      }
    }

    // child: list
    & ul {
      font-size: $site-nav-submenu-font-size;
      font-weight: $site-nav-submenu-font-weight;
      letter-spacing: $site-nav-submenu-letter-spacing;
      text-transform: $site-nav-submenu-text-transform;
      padding-bottom: $site-nav-submenu-bottom-spacing;
    }

    // child btn
    & a {
      padding: $site-nav-submenu-item-vpadding $site-nav-submenu-item-hpadding;
    }

    // modifier
    &.is-open {
      // immediate child: label
      & .site-nav-submenu-toggle {
        color: $site-nav-submenu-open-color;

        @if $site-nav-submenu-icon {
          &:after {
            @include fa-icon-rotate(-180deg, 2);
          }
        }
      }

      // immediate child: list container
      & > div {
        @include bb-prefix-transform(translateY(0));
        // 10.20.16: Removing transition/animation to address mobile performance issue.
        // @include bb-prefix-transition($site-nav-submenu-container-open-transition);
        height: auto;
        opacity: 1;
        display: block;
      }
    }

    // parent modifier: desktop
    .site-header-desktop & {
      @include bb-position($position: relative); // important: no z-index so dropdown opens above other buttons!

      // special case: if we've added an icon, we need to expand the right side out to maintain the
      // horizontal spacing between items.
      @if $site-nav-submenu-icon {
        padding-right: if(
          $site-nav-desktop-submenu-icon-x,
          abs($site-nav-desktop-submenu-icon-x),
          null
        );
      }

      // immediate child: dropdown container
      & > div {
        @include bb-position($position: absolute, $top: 100%, $left: 0, $z-index: 1);
        @include bb-size($min-width: $site-nav-submenu-desktop-dropdown-min-width, $height: auto);
        @include bb-prefix-border-radius($border-radius);
        @include bb-prefix-transform(none);
        @include bb-prefix-transition(none);
        display: none;
        text-align: left;
        background-color: $site-nav-submenu-desktop-dropdown-bg-color;
        opacity: 1;
      }

      &.is-open > div {
        display: block;
      }

      // child: dropdown list
      & ul {
        padding-top: $site-nav-submenu-desktop-dropdown-vpadding;
        padding-bottom: $site-nav-submenu-desktop-dropdown-vpadding;

        // child: list item button
        & a {
          @include bb-size($width: 100%);
          padding: $site-nav-submenu-desktop-dropdown-item-vpadding
            $site-nav-submenu-desktop-dropdown-item-hpadding;

          // pseudo modifier: background color change
          &:hover {
            background-color: $site-nav-submenu-desktop-drodpwn-item-hover-color;
          }
        }
      }
    }
  }

  // =========== SITE : NAV TOGGLE BTN ======================================================================
  // block
  .nav-toggle-btn {
    @include bb-button-base;
    @include bb-position($position: absolute, $top: 50%, $right: 0, $z-index: $site-togglebtn-z-index);
    @include bb-prefix-transform(translateY(-50%));
    background-color: $site-togglebtn-bg-color;
    padding: $site-header-vpadding-rem $site-header-mobi-hpadding-rem;

    // element
    &__line {
      @include bb-size($width: $site-togglebtn-line-width, $height: $site-togglebtn-line-height);
      @include bb-prefix-transform-origin(50% 50%);
      @include bb-prefix-transition(all 0.2s $btn-transition-ease 0s);
      display: block;
      background-color: $site-togglebtn-line-color;
      margin-bottom: $site-togglebtn-line-spacing;

      // pseudo modifier
      &:last-child {
        margin-bottom: 0;
      }
    }

    // hover modifier
    &:hover {
      & .nav-toggle-btn__line {
        background-color: $site-togglebtn-active-color;
      }
    }

    // hover, focus, active modifier
    // is this an accessibility concern if we remove the weird outline?
    @include hover-focus-active() {
      // BSs missing active:focus!
      &,
      &:active {
        outline: 0;
      }
    }

    &:focus {
      @extend %outline;
    }
    // modifier: nav-toggle-btn--active
    // animate the hamburger lines!
    &--active {
      // we're calculating the center y-point for each line to move to. i'm pretty sure this works if we change sizes.?.
      $y: (

          (
             ($site-togglebtn-line-height * 2) + ($site-togglebtn-line-spacing *
                  2)
          ) / 2
      );

      // parent modifier: active
      & .nav-toggle-btn__line {
        // We have to account for our first child which is the .sr-only label.
        &:nth-of-type(2) {
          @include bb-prefix-transform(translateY($y) rotate(45deg));
        }

        &:nth-of-type(3) {
          @include bb-prefix-transform(translateY($y));
          opacity: 0;
        }

        &:nth-of-type(4) {
          @include bb-prefix-transform(translateY(-$y) rotate(-45deg));
        }
      }
    }

    // parent modifier (body)
    // note: when a `.site-location` bar is present, the normal vertical centering of the toggle button
    // is calculated using the entire header (including the `.site-location), which makes it appears as if
    // the alignment is off. Unfortunately, there isn't a good way for us to only center it with the logo,
    // so instead, we are going to align it to the top.
    //
    // note: the `.has-nav-address-bar` is only present when the `templates/_macros/_header.html` macro file
    // has determined a single-location address bar should exist.
    .has-nav-address-bar .site-header:not(.site-header-mobi--collapse) & {
      @include bb-position($top: 0);
      @include bb-prefix-transform(translateY(0));
    }
  }

  // =========== SITE : SOCIAL ==============================================================================
  // note: vspacing is intended to collapse if border is present
  // block
  .site-social {
    padding-top: 0;
    padding-bottom: 0;

    // immediate child
    & > .social-accounts {
      margin-top: $site-social-vspacing;
      margin-bottom: $site-social-accounts-margin-bottom;
    }

    // modifier
    // note: this should match the .site-location--bordered exactly (both single and double)
    &#{&}--bordered:before {
      content: '';
      display: block;
      border-bottom: $site-header-divider-width solid $site-header-border-color;
      margin-bottom: $site-social-vspacing;

      @if $site-header-divider-double {
        @include bb-size($height: $site-header-divider-double-spacing);
        border-top: $site-header-divider-width solid $site-header-border-color;
      }
    }

    // parent modifier: destkop
    .site-header-desktop & {
      display: inline-block;

      // if this is followed by the cart button, we want to allow for a little extra vertical adjustment
      // and flexibility.
      &:not(:last-child) {
        padding-top: $site-header-desktop-secondary-social-vadjust-for-cart;
      }

      // immediate child: list
      & > .social-accounts {
        // note: uses same styles as location font/bg settings.
        @include bb-social-accounts-color-variant(
          $color:  $social-accounts-header-desktop-color,
          $bg-color: $social-accounts-header-desktop-bg-color,
          $active-color: $social-accounts-header-desktop-active-color,
          $active-bg-color: $social-accounts-header-desktop-active-bg-color,
          $is-circle-icon: $social-accounts-header-desktop-circle-icon
        );
        margin-top: 0;
        margin-bottom: 0;

        // immediate child: item
        & > li {
          text-align: center; // because, otherwise, the alignment will be inherited!
          margin-bottom: 0;
        }
      }
    }

    // parent modifier: mobi
    .site-header-mobi & {
      padding-left: $site-header-mobi-hpadding-rem;
      padding-right: $site-header-mobi-hpadding-rem;
    }
  }

  // =========== SITE : POWERED BY ==========================================================================
  .site-powered-by {
    @include bb-size($width: 100%, $height: $site-powered-by-sticky-height);
    display: table;
    font-family: $site-powered-by-font-family;
    font-size: $site-powered-by-font-size;
    font-weight: $site-powered-by-font-weight;
    text-transform: $site-powered-by-text-transform;
    text-align: center;
    color: $site-powered-by-color;
    background-color: $site-powered-by-bg-color;
    @if ($site-powered-by-bg-image) {
      @include bb-background-pattern-base($image: $site-powered-by-bg-image);
    }

    // immediate child
    & > a {
      @include bb-size($width: 100%);
      @include bb-prefix-transition(color $btn-transition-duration $btn-transition-ease 0s);
      display: table-cell;
      color: inherit;
      padding-top: 1em;
      padding-bottom: 1em;
      text-decoration: none;
      vertical-align: middle;
      // Because our javascript will query for the last clickable
			// element in our mobile panel we want to ensure this is
			// inheriting from its ancestor.
			visibility: inherit;      

      // hover modifier
      &:hover {
        text-decoration: none;
        color: $site-powered-by-active-color;
      }
    }

    // parent modifier: mobile
    .site-header-mobi & {
      margin-top: ($site-powered-by-sticky-height * -1);

      & > a {
        padding-left: $site-header-mobi-hpadding-rem;
        padding-right: $site-header-mobi-hpadding-rem;
      }
    }
  }

  // =========== SITE : CART BUTTON =========================================================================
  .btn-cart {
    // modifier: all .btn-cart in header
    .site-header & {
      display: none;
    }

    // modifier: desktop
    .site-header-desktop & {
      display: inline-block;
    }

    // modifier: .btn-cart inside mobile header, but only when collapsed
    .site-header-mobi--collapse .site-header-mobi & {
      // auto calculate based on the sizing of the toggle button
      $pxauto: calc(
        #{($site-header-mobi-hpadding-rem * 2)} + #{$site-togglebtn-line-width}
      );
      @include bb-position(
        $position: absolute,
        $top: 50%,
        $right: if($site-header-mobi-cart-btn-right, $site-header-mobi-cart-btn-right, $pxauto),
        $z-index: $site-header-mobi-cart-btn-z-index
      );
      @include bb-prefix-transform(translateY(-50%));
      display: inline-block;
    }
  }
}

// =========== SITE : STICKY HEADER =======================================================================
// this acts as a modifier

// only include these styles if Appearance > Navigation > Sticky option is enabled 
@if $site-header-desktop-export-sticky-styles {
  .site-header-desktop-primary--collapsed .site-nav-menu {

    // base color
    .site-nav-link,
    ul li a {
      color: $site-header-desktop-primary-collapsed-nav-color;
    }

    // active state
    .site-nav-link:active,
    .is-active .site-nav-link,
    ul li a:active,
    ul li.is-active a {
      color: $site-header-desktop-primary-collapsed-nav-active-color;
    }

    // hover state even for active items
    .site-nav-link,
    .site-nav-link:active,
    .is-active .site-nav-link,
    ul li a,
    ul li a:active,
    ul li.is-active a {
      &:hover {
        color: $site-header-desktop-primary-collapsed-nav-hover-color;
      }
    }
  }
}

//Target IE 8-11 (and old FireFox 1.x)
//https://browserstrangeness.bitbucket.io/css_hacks.html#webkit
_:-ms-input-placeholder,
:root .nav-toggle-btn:focus {
  outline: 3px solid #4d90fe;
}

//Target ONLY Safari 6.2,7.1+ browsers
//https://stackoverflow.com/questions/17324960/copy-chrome-default-inputs-outline-style
//attempt to make the focus indicator more visible in Safari for ADA purpose
_::-webkit-full-page-media,
_:future,
:root .nav-toggle-btn:focus {
  outline: 3px solid #4d90fe;
}

//Target Microsoft Edge 12+ (all MS Edge)
//attempt to make the focus indicator more visible in Safari for ADA purpose
_:-ms-lang(x),
_:-webkit-full-screen,
.nav-toggle-btn:focus {
  outline: 3px solid #4d90fe;
}



