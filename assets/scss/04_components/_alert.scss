////
/// @group components-alert
/// @access public
//// 

// ============================================================================================================
// =============== ALERT : VARS ===============================================================================
// ============================================================================================================
/// The z-index order to place the `.site-notifications` element. Please note, this should be above the mobile 
/// navigation panel.
/// @access private
/// @type Number
$site-notifications-z-index: 50 !default;

/// Text aligment to apply to **Simple Alerts**.
/// @type String
$alert-text-align: center !default;

/// Text color to apply to **Simple Alerts**. Please note, by default the text color will use the alternate body
/// color because it assumes you will be adding a background color that contrasts the normal body background
/// color.
/// @type Color
$alert-color: $body-alt-color !default;

/// Background color to apply to **Simple Alerts**.
/// @type Color
$alert-bg-color: $btn-primary-bg !default;

/// Background color to apply to **Simple Alerts** when they represent and error or warning.
/// @type Color
$alert-warning-bg-color: $input-error-color !default;

/// Horizontal padding to apply to **Simple Alerts**. By default, this matches `$gutter-width` at the `xs` breakpoint.
/// @type Number
$alert-spacer-x: bb-calc-gutter($breakpoint: xs, $divisor: 1) !default;

/// Vertical padding to apply to **Simple Alerts**.
/// @type Number
$alert-spacer-y: $spacer !default;

/// Fine-tune the vertical positioning of the **Simple Alert's** close button. Please note, this value is applied 
/// via `transform: translateY(...)`, so it should be in units relatively to the size of the close button itself.
/// @type Number
$alert-close-btn-translate-y: -10% !default;

/// Provide an alternate text link color for **Simple Alerts**. Please note, this value is ignored if the `$alert-color`
/// matches the `$body-color` – in which case we should be using the standard link color styles anyways.
/// @type Color
$alert-link-color: $link-alt-color !default;

/// Provide an alternate text link `:hover` color for **Simple Alerts**. Please note, this value is ignored if the 
/// `$alert-color`matches the `$body-color` – in which case we should be using the standard link color styles anyways.
/// @type Color
$alert-link-active-color: $link-alt-active-color !default;

// ============================================================================================================
// =============== ALERT : EXPORT =============================================================================
// ============================================================================================================

@mixin bb-export-classes-alert() {
	
	// block
	.site-notifications {
		@include bb-position($position: relative, $z-index: $site-notifications-z-index);
	}

	// block
	.alert {
		@include make-container;
		text-align: $alert-text-align;
		color: $alert-color;
		background-color: $alert-bg-color;
		overflow: hidden;
		
		// shared children
		&__content,
		& .close {
			margin-top: $alert-spacer-y;
			margin-bottom: $alert-spacer-y;
		}

		// element
		&__content {
			padding-left: $alert-spacer-x;
			padding-right: $alert-spacer-x;
		}

		// immediate child
		& > .close {
			@if $alert-close-btn-translate-y {
				@include bb-prefix-transform(translateY(-10%));	
			}
		}

		// child: anchors
		// note: if the the alert color and link color will be the same, 
		// we are going to force an underline so it stands out.
		@if $alert-color and $alert-color != $body-color {
			@include bb-anchor-variant(
				$color: $alert-link-color, 
				$active-color: $alert-link-active-color,
				$text-decoration: if(($alert-color == $alert-link-color) or ($alert-link-color == inherit), underline, null)
			);
		}

		// modifier: we only want an animate-out transition.
		// note: !important is set to ensure overriding .revealable which
		// has a very high specificity.
		&--hide {
			@include bb-prefix-transition(height 0.3s ease 0s !important);
		}

		// modifier: when an alert explicitly represents an error or warning
		// message instead of implicitly representing a "notification".
		&--warning {
			background-color: $alert-warning-bg-color;

			// immediate child: apply a max width
			// TODO: This should probably go on all alerts.
			& > .alert__content {
				@include make-container-max-widths;
				@include bb-hmargins-auto;
			}
		}
	}
}