////
/// @group elements-buttons
/// @access public
////

// ============================================================================================================
// =============== BUTTONS : VARS =============================================================================
// ============================================================================================================
/// Font size to apply to `.btn` instances. Please provide in REM units.
///
/// **Theme Option:** Button Styles > Main Styles > Font Size
///
/// @type Number
$btn-font-size: 0.8rem !default;

/// Stroke weight to apply to `.btn` instances. Please provide in PX units.
///
/// **Theme Option:** Button Styles > Main Styles > Stroke Weight
///
/// @type Number
$btn-border-width: null !default;

/// Text-transform to apply to `.btn` instances. (ex: uppercase)
///
/// **Theme Option:** Button Styles > Main Styles > Font Uppercase
///
/// @type String
$btn-text-transform: null !default;

/// Letter-spacing to apply to `.btn` instances.
///
/// **Theme Option:** Button Styles > Main Styles > Letter Spacing
///
/// @type Number
$btn-letter-spacing: 1px !default;

/// Additional bottom padding to apply to `.btn` instances. Vertical centering doesn't always look correct
/// on buttons, so we are adding a little extra control.
/// @type Number
$btn-padding-bottom-rem: null !default;

/// Alternate color to apply to button controls such as arrows, close x's, etc. Please note, it is important
/// that this value is entered as a **Hex Color Only** because it is used later in multiple places that rely
/// on it being a Hex Color. For example, this is injected into SVG data uris.
/// @type Color - hex
$btn-controls-alt-color-hex: #ffffff !default;

/// Horizontal button margins. This is used sparingly as each situation/context is unique.
/// @type Number
$btn-spacer-x: bb-calc-gutter($breakpoint: xs) !default;

/// Vertical button margins used to add separate between buttons and other content. For example, this is used
/// inside popups, heros, and various content blocks.
/// @type Number
$btn-spacer-y: $spacer !default;

/// Transition duration applied to buttons and interactive elements on `:hover`. Please ensure you include a
/// timing unit such as `s, ms`.
/// @type Number
$btn-transition-duration: 0.2s !default;

/// Transition easing function applied to buttons and interactive elements on `:hover`. This value can be
/// shortcut identifiers such as `ease-in-out`, or it can be a more complex equation such as
/// `cubic-bezier(0.86, 0, 0.07, 1)`.
/// @link http://easings.net Online CSS Easing Generator
/// @type String | Function
$btn-transition-ease: ease-in-out !default;

/// Font family stack to apply to all `.btn-brand` instances.
/// @type String
$btn-brand-font-family: $headings-font-family !default;

/// Border color to apply to all `.btn-brand` instances.
///
/// **Theme Option:** Button Styles > Main Styles > Stroke Color
///
/// @type Color
$btn-brand-border-color: $btn-primary-bg !default;

/// Text color to apply to all `.btn-brand` instances' `:hover` state.
///
/// **Theme Option:** Button Styles > Main Styles > Hover Font Color
///
/// @type Color
$btn-brand-active-color: $btn-primary-color !default;

/// Background color to apply to all `.btn-brand` instances' `:hover` state.
///
/// **Theme Option:** Button Styles > Main Styles > Hover Background Color
///
/// @type Color
$btn-brand-active-bg: $brand-primary !default;

/// Border color to apply to all `.btn-brand` instances' `:hover` state.
///
/// **Theme Option:** Button Styles > Main Styles > Hover Stroke Color
///
/// @type Color
$btn-brand-active-border-color: $btn-brand-active-bg !default;

/// Alternate color to apply to all `.btn-brand-alt` instances. Please note, by default all `.btn-brand-alt`
/// instances are styled exactly the same as `.btn-brand` instances.
///
/// **Theme Option:** Button Styles > Alternate Styles > Font Color
///
/// @type Color
$btn-brand-alt-color: $btn-primary-color !default;

/// Alternate background color to apply to all `.btn-brand-alt` instances. Please note, by default all
/// `.btn-brand-alt` instances are styled exactly the same as `.btn-brand` instances.
///
/// **Theme Option:** Button Styles > Alternate Styles > Background Color
///
/// @type Color
$btn-brand-alt-bg-color: $btn-primary-bg !default;

/// Alternate border color to apply to all `.btn-brand-alt` instances. Please note, by default all
/// `.btn-brand-alt` instances are styled exactly the same as `.btn-brand` instances.
///
/// **Theme Option:** Button Styles > Alternate Styles > Stroke Color
///
/// @type Color
$btn-brand-alt-border-color: $btn-brand-alt-bg-color !default;

/// Alternate color to apply to all `.btn-brand-alt` instances' `:hover` state. Please note, by default all
/// `.btn-brand-alt` instances are styled exactly the same as `.btn-brand` instances.
///
/// **Theme Option:** Button Styles > Alternate Styles > Hover Font Color
///
/// @type Color
$btn-brand-alt-active-color: $btn-brand-alt-color !default;

/// Alternate background color to apply to all `.btn-brand-alt` instances' `:hover` state. Please note, by
/// default all `.btn-brand-alt` instances are styled exactly the same as `.btn-brand` instances.
///
/// **Theme Option:** Button Styles > Alternate Styles > Hover Background Color
///
/// @type Color
$btn-brand-alt-active-bg-color: $btn-brand-active-bg !default;

/// Alternate border color to apply to all `.btn-brand-alt` instances' `:hover` state. Please note, by
/// default all `.btn-brand-alt` instances are styled exactly the same as `.btn-brand` instances.
///
/// **Theme Option:** Button Styles > Alternate Styles > Hover Stroke Color
///
/// @type Color
$btn-brand-alt-active-border: $btn-brand-alt-active-bg-color !default;

/// Font family stack to apply to all `.btn-tabs` instances. Please note, by default all `.btn-tabs` instances
/// are styled to be the exact inverse (except font color) of `.btn-brand` instances.
/// @type String
$btn-tabs-font-family: $btn-brand-font-family !default;

/// Color to apply to all `.btn-tabs` instances. Please note, by default all `.btn-tabs` instances
/// are styled to be the exact inverse (except font color) of `.btn-brand` instances.
/// @type Color
$btn-tabs-color: $btn-brand-active-color !default;

/// Background color to apply to all `.btn-tabs` instances. Please note, by default all `.btn-tabs` instances
/// are styled to be the exact inverse (except font color) of `.btn-brand` instances.
/// @type Color
$btn-tabs-bg-color: $btn-brand-active-bg !default;

/// Border color to apply to all `.btn-tabs` instances. Please note, by default all `.btn-tabs` instances
/// are styled to be the exact inverse (except font color) of `.btn-brand` instances.
/// @type Color
$btn-tabs-border-color: $btn-brand-active-bg !default;

/// Color to apply to all `.btn-tabs` instances' `:hover` and `:active, .active` states. Please note, by default
/// all `.btn-tabs` instances are styled to be the exact inverse (except font color) of `.btn-brand` instances.
/// @type Color
$btn-tabs-active-color: $btn-primary-color !default;

/// Background color to apply to all `.btn-tabs` instances' `:hover` and `:active, .active` states. Please note,
/// by default all `.btn-tabs` instances are styled to be the exact inverse (except font color) of `.btn-brand`
/// instances.
/// @type Color
$btn-tabs-active-bg-color: $btn-primary-bg !default;

/// Border color to apply to all `.btn-tabs` instances' `:hover` and `:active, .active` states. Please note, by
/// default all `.btn-tabs` instances are styled to be the exact inverse (except font color) of `.btn-brand` instances.
/// @type Color
$btn-tabs-active-border: $btn-primary-bg !default;

/// Horizontal inner padding applied to `.btn-tabs`. This is useful if you aren't using a background color or
/// `:hover, :active` background color because it allows you to tighten up the perceived spacing between buttons.
/// Please note, by default the value is `null` so that it matches the styles of `.btn-brand` until otherwise
/// specified.
/// @type Number
$btn-tabs-hpadding: null !default;

/// Font family stack to apply to all `.btn-cart` instances. Please note, by default all `.btn-cart` instances
/// are styled exactly the same as `.btn-brand` instances.
/// @type String
$btn-cart-font-family: $btn-brand-font-family !default;

/// Font size to apply to all `.btn-cart` instances. Please provide this value in REM units. Please note, by default
/// all `.btn-cart` instances are styled exactly the same as `.btn-brand` instances.
/// @type Number
$btn-cart-font-size: 0.75rem !default;

/// Text-transform to apply to all `.btn-cart` instances. (ex: uppercase) Please note, this is one of the only
/// `.btn-cart` properties that **does not** inherit `.btn-brand` styles by default.
/// @type String
$btn-cart-text-transform: none !default;

/// Color to apply to all `.btn-cart` instances. Please note, by default all `.btn-cart` instances are styled exactly
/// the same as `.btn-brand` instances.
/// @type Color
$btn-cart-color: $btn-primary-color !default;

/// Background color to apply to all `.btn-cart` instances. Please note, by default all `.btn-cart` instances are styled
/// exactly the same as `.btn-brand` instances.
/// @type Color
$btn-cart-bg: $btn-primary-bg !default;

/// Color to apply to all `.btn-cart` instances' `:hover` states. Please note, by default all `.btn-cart` instances are
/// styled exactly the same as `.btn-brand` instances.
/// @type Color
$btn-cart-active-color: $btn-brand-active-color !default;

/// Background color to apply to all `.btn-cart` instances' `:hover` states. Please note, by default all `.btn-cart`
/// instances are styled exactly the same as `.btn-brand` instances.
/// @type Color
$btn-cart-active-bg: $btn-brand-active-bg !default;

/// Padding to apply to all `.btn-cart` instances.
/// @type Number | Shorthand
$btn-cart-padding: 0.3em 1.1em !default;

/// FontAwesome icon to apply to all `.btn-cart` instances. Please be aware that if you intend on overriding this variable,
/// you will not (yet) have access to FontAwesome's variables in *Theme Options > Bootstrap Override Variables* box. Instead,
/// you need to enter the key input value directly. For example – `$btn-cart-icon: "\f039"`.
/// @type String
$btn-cart-icon: $fa-var-shopping-cart !default;

/// Margin-right applied to a `.btn-cart` icon. Providing this value in EM units will keep the spacing relative to the font-size
/// – allowing you to grow or reduce the font-size without having to re-adjust the spacing every time.
/// @type Number
$btn-cart-icon-spacer: 0.5em !default;

/// Whether or not to use the word *Item(s)* in `.btn-cart` instances. If you set this value to be `false`, only the
/// quantity number and icon will be visible inside the button.
/// @type Bool
$btn-cart-use-label: true !default;

/// Color to be applied all `.arrow-btn` instances. Please note, it is important that this value is entered as a
/// **Hex Color Only** because it is used later in multiple places that rely on it being a Hex Color. For example, this is
/// injected into SVG data uris.
/// @type Color
$arrow-btn-color-hex: $btn-controls-alt-color-hex !default;

/// Color to be applied all `.arrow-btn` instances' `:hover` state.
/// @type Color
$arrow-btn-active-color-hex: $btn-controls-alt-color-hex !default;

/// DropShadow Filter parameters to apply to all `.arrow-btn` instances. Please note, this is applied using `filter: drop-shadow(...);`
/// and not `box-shadow: ...; `.
/// @link https://css-tricks.com/almanac/properties/f/filter/#article-header-id-10 DropShadow Filter Demo
/// @type DropShadow Filter
$arrow-btn-drop-shadow-filter: 0px 0px 6px rgba(#000000, 0.4) !default;

/// SVG Data URI to be used for arrow buttons pointing left and right. Please note that a `[[HEXCOLOR]]` flag/placeholder must be
/// present in the URI for the icon to be styled used scss variables such as `$arrow-btn-color-hex: 0xFF0000;`. Also note, SVG
/// Data URIs must be url-encoded for maximum browser compatibility.
/// @link https://codepen.io/yoksel/details/JDqvs/ URL-encode SVG Data URIs
/// @type String
$arrow-btn-lr-icon: 'data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20width%3D%2228%22%20height%3D%2254%22%3E%0A%09%3Cpath%20fill%3D%22%23[[HEXCOLOR]]%22%20d%3D%22M27.1%2C54c-0.2%2C0-0.4-0.1-0.6-0.2l-26.2-26C0.1%2C27.6%2C0%2C27.3%2C0%2C27.1c0-0.3%2C0.1-0.5%2C0.3-0.7L26.5%2C0.2c0.4-0.3%2C1-0.3%2C1.3%2C0.1c0.3%2C0.4%2C0.3%2C1-0.1%2C1.3L2.3%2C27l25.3%2C25.4c0.4%2C0.3%2C0.5%2C0.9%2C0.2%2C1.3C27.6%2C53.9%2C27.4%2C54%2C27.1%2C54z%22/%3E%0A%3C/svg%3E'
    !default;

/// Width of left/right arrow buttons.
/// @type Number
$arrow-btn-lr-icon-width: 28px !default;

/// Height of left/right arrow buttons.
/// @type Number
$arrow-btn-lr-icon-height: 54px !default;

/// SVG Data URI to be used for arrow buttons pointing up and down. Please note that a `[[HEXCOLOR]]` flag/placeholder must be
/// present in the URI for the icon to be styled used scss variables such as `$arrow-btn-color-hex: 0xFF0000;`. Also note, SVG
/// Data URIs must be url-encoded for maximum browser compatibility.
/// @link https://codepen.io/yoksel/details/JDqvs/ URL-encode SVG Data URIs
/// @type String
$arrow-btn-ud-icon: 'data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20width%3D%2254%22%20height%3D%2228%22%3E%0A%09%3Cpath%20fill%3D%22%23[[HEXCOLOR]]%22%20d%3D%22M54%2C0.9c0%2C0.2-0.1%2C0.4-0.2%2C0.6l-26%2C26.2c-0.2%2C0.2-0.4%2C0.3-0.7%2C0.4c-0.3%2C0-0.5-0.1-0.7-0.3L0.2%2C1.5%0A%09c-0.3-0.4-0.3-1%2C0.1-1.3c0.4-0.3%2C1-0.3%2C1.3%2C0.1L27%2C25.7L52.4%2C0.4c0.3-0.4%2C0.9-0.5%2C1.3-0.2C53.9%2C0.4%2C54%2C0.6%2C54%2C0.9z%22/%3E%0A%3C/svg%3E'
    !default;

/// Width of up/down arrow buttons.
/// @type Number
$arrow-btn-ud-icon-width: 54px !default;

/// Height of up/down arrow buttons.
/// @type Number
$arrow-btn-ud-icon-height: 28px !default;

/// An alternate color to be used for standard text links. This is used in heros, image overlays, etc where the
/// defaults settings may not apply or links become hard to see – for example dark links on dark backgrounds.
/// By default, this variable will inherit the text color of the element it is placed inside.
/// @type Color | String
$link-alt-color: inherit !default;

/// An alternate color to be used for standard text links' `:hover` state. This is used in heros, image overlays,
/// etc where the defaults settings may not apply or links become hard to see – for example dark links on dark
/// backgrounds. By default, this variable will inherit the link color so there is no color change on `:hover`.
/// @type Color | String
$link-alt-active-color: inherit !default;

$hero-motion-element-control-section-breakpoint-1: 1050px;
$hero-motion-element-control-section-breakpoint-2: 810px;

// ADA Compliance: make the default focus indicator consistent across browsers (with Chrome default focus indicator)
$webkit-outline: auto 6px -webkit-focus-ring-color;
$non-webkit-outline: auto 3px Highlight;
%outline {
    outline: $non-webkit-outline;
    outline: $webkit-outline;
}

// ============================================================================================================
// =============== BUTTONS : EXPORT ===========================================================================
// ============================================================================================================
@mixin bb-export-classes-buttons() {
    a:focus,
    button:focus {
        @extend %outline;
    }

    //Target ONLY Safari 6.2,7.1+ browsers
    //https://stackoverflow.com/questions/17324960/copy-chrome-default-inputs-outline-style
    //attempt to make the focus indicator more visible in Safari for ADA purpose
    _::-webkit-full-page-media,
    _:future,
    :root a:focus,
    :root button:focus {
        outline: 3px solid #4d90fe;
    }

    //Target IE 8-11 (and old FireFox 1.x)
    //https://browserstrangeness.bitbucket.io/css_hacks.html#webkit
    _:-ms-input-placeholder,
    :root a:focus,
    :root button:focus {
        outline: 3px solid #4d90fe;
    }

    a {
        @include bb-prefix-transition(
            color $btn-transition-duration $btn-transition-ease 0s
        );
    }

    .no-link {
        text-decoration: none;
        @include hover-focus-active() {
            text-decoration: none;
            color: inherit;
        }
    }

    // By default BS transition are turned off...which is good. For now, we can use our prefix mixins instead.
    .btn {
        @include bb-prefix-transition(
            all $btn-transition-duration $btn-transition-ease 0s
        );
        font-size: $btn-font-size;
        text-decoration: none;
        text-transform: $btn-text-transform;
        letter-spacing: $btn-letter-spacing;
        padding-bottom: $btn-padding-bottom-rem;
        border-width: $btn-border-width;

        &:focus {
            @extend %outline;
        }

        &.active {
            &:focus {
                @extend %outline;
            }
        }
    }

    // By default, BS sets `pointer-events: none;` which disables the ability to show `cursor: not-allowed;`.
    a.btn.disabled,
    a.btn[disabled] {
        pointer-events: auto;
    }

    // If you don't edit the $btn-brand-active-bg, this should mirror .btn-primary exactly.
    .btn-brand {
        font-family: $btn-brand-font-family;
        @include bb-button-variant(
            $color: $btn-primary-color,
            $background: $btn-primary-bg,
            $border: $btn-brand-border-color,
            $active-color: $btn-brand-active-color,
            $active-background: $btn-brand-active-bg,
            $active-border: $btn-brand-active-border-color
        );
    }

    // flips the .btn-brand styles
    .btn-brand-inverted {
        font-family: $btn-brand-font-family;
        @include bb-button-variant(
            $color: $btn-primary-bg,
            $background: $btn-primary-color,
            $border: $btn-brand-border-color,
            $active-color: $btn-primary-color,
            $active-background: $btn-brand-active-bg,
            $active-border: $btn-brand-active-border-color
        );
    }

    // alternate styles
    .btn-brand-alt {
        font-family: $btn-brand-font-family;
        @include bb-button-variant(
            $color: $btn-brand-alt-color,
            $background: $btn-brand-alt-bg-color,
            $border: $btn-brand-alt-border-color,
            $active-color: $btn-brand-alt-active-color,
            $active-background: $btn-brand-alt-active-bg-color,
            $active-border: $btn-brand-alt-active-border
        );
    }

    // buttons used in .tabs. Intended to be the exact inverse of .btn-brand unless specified.
    .btn-tabs {
        font-family: $btn-tabs-font-family;
        padding-left: $btn-tabs-hpadding;
        padding-right: $btn-tabs-hpadding;
        @include bb-button-variant(
            $color: $btn-tabs-color,
            $background: $btn-tabs-bg-color,
            $border: $btn-tabs-border-color,
            $active-color: $btn-tabs-active-color,
            $active-background: $btn-tabs-active-bg-color,
            $active-border: $btn-tabs-active-border
        );
    }

    // button used for primary cart button with icon. Intended to be exactly the same as
    // .btn-brand (excluding padding and transform) unless specified.
    .btn-cart {
        font-family: $btn-cart-font-family;
        font-size: $btn-cart-font-size;
        text-transform: $btn-cart-text-transform;
        padding: $btn-cart-padding;

        @if $btn-cart-icon {
            &:before {
                @include fa-icon;
                content: $btn-cart-icon;
                margin-right: $btn-cart-icon-spacer;
            }
        }

        @if $btn-cart-use-label {
            &:after {
                content: ' ' attr(data-cart-label);
            }
        }

        @include bb-button-variant(
            $color: $btn-cart-color,
            $background: $btn-cart-bg,
            $border: $btn-cart-bg,
            $active-color: $btn-cart-active-color,
            $active-background: $btn-cart-active-bg,
            $active-border: $btn-cart-active-bg
        );

        // modifier: .btn-cart--empty
        // Note: This originally was intended to hide cart buttons when empty. However, we are
        // keeping this modifier and contining to add/remove via javascript in case designers
        // see an opportunity to style empty cart buttons different – colors, etc.
        // the above was decided as obsolete as Osaka continues to implement the
        // display none. We do not want users to be able to navigate to a store
        // via an empty cart.
        &--empty {
            display: none !important;
        }
    }

    // modifier: make sure buttons stay centered and fit as long as possible.
    .btn-block {
        padding-left: bb-calc-gutter(xs);
        padding-right: bb-calc-gutter(xs);
    }

    .ada-motion-toggle-btns.hide-motion {
        display: none;
    }

    .ada-motion-toggle-btns {
        color: $hero-color;
        background-color: transparent;
        padding: 0.7rem 0.7rem;
        font-size: 2rem;
        &:hover {
            color: $brand-accent;
        }
        &:active {
            color: $brand-accent;
        }
        @media screen and(max-width: $hero-motion-element-control-section-breakpoint-1) {
            font-size: 1.5rem;
        }

        @media screen and(max-width: $hero-motion-element-control-section-breakpoint-2) {
            font-size: 1.2rem;
        }
    }

    // block: arrow buttons used for heros, galleries, etc.
    .arrow-btn {
        @include bb-button-base($bb-btn-padding-y: 0, $bb-btn-padding-x: 0);
        background-color: transparent;

        &:focus {
            @extend %outline;
        }

        // pseudo child: icon
        &:before {
            @include bb-size($width: 100%, $height: 100%);
            @include bb-background($size: 100% 100%, $repeat: no-repeat);
            @if $arrow-btn-drop-shadow-filter {
                @include bb-prefix-filter-drop-shadow(
                    $arrow-btn-drop-shadow-filter
                );
            }
            content: '';
            display: block;
        }

        // modifiers: up/down arrows
        &--up,
        &--down {
            @include bb-arrow-btn-variant(
                $bb-width: $arrow-btn-ud-icon-width,
                $bb-height: $arrow-btn-ud-icon-height,
                $bb-icon: $arrow-btn-ud-icon
            );
        }

        // modifiers: left, right arrows
        &--left,
        &--right {
            @include bb-arrow-btn-variant(
                $bb-width: $arrow-btn-lr-icon-width,
                $bb-height: $arrow-btn-lr-icon-height,
                $bb-icon: $arrow-btn-lr-icon
            );
        }

        // modifier: up (down flipped)
        &--up {
            &:before {
                @include bb-prefix-transform(scale(1, -1));
            }
        }

        // modifier: right (left flipped)
        &--right {
            &:before {
                @include bb-prefix-transform(scale(-1, 1));
            }
        }
    }

    //Target ONLY Safari 6.2,7.1+ browsers
    //https://stackoverflow.com/questions/17324960/copy-chrome-default-inputs-outline-style
    //attempt to make the focus indicator more visible in Safari for ADA purpose
    _::-webkit-full-page-media,
    _:future,
    :root .arrow-btn:focus {
        outline: 5px solid #4d90fe;
    }
}
