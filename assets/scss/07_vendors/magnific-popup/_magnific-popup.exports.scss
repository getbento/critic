// ============================================================================================================
// =============== MAGNIFIC POPUP EXPORTS ONLY ================================================================
// ============================================================================================================
// BentoBox:
// - This file is derived from bower_components/magnific-popup/css/main.scss
//
// Intended use:
// - Override the default Magnific imports and re-path to use our /assets/bower_components/ directory instead.
// - Only @import files that export classes directly. DO NOT @import variables, function, mixins, etc.
// - Note, Magnific Popup pulls in its own _settings file, so we can't fully separate our imports/exports.

/*!
 *  Magnific Popup CSS
 */

@import '../../bower_components/magnific-popup/main';

// ============================================================================================================
// Note:
// We need to add some extra .mfp-* classes to get the functionality we want. Because they are modifications
// to Magnific Popup element, we're doing it here instead of in our _popup.scss.


@supports (-webkit-overflow-scrolling: touch) {
	.mfp-wrap {
		-webkit-overflow-scrolling: touch;
		-webkit-transform: translateZ(
			0
		); //ios modal bug fix: https://github.com/dimsemenov/Magnific-Popup/issues/12
	}
}

// modifier: mfp content (.mfp-wrap.mfp-fit)
.mfp-fit .mfp-content {
	@include bb-size($height: 100%);
}

// mfp close button
.mfp-close {
	@include bb-size($width: $popup-close-outside-size, $height: $popup-close-outside-size);
	@include bb-prefix-transition(all $btn-transition-duration $btn-transition-ease 0s);
	font-family: $popup-close-font-stack;
	font-size: $popup-close-outside-font-size;
	line-height: $popup-close-outside-size;

	// pseudo modifier
	&:hover,
	&:focus {
		@include bb-position($top: 0);
		color: $brand-accent;
	}

	&:focus {
		outline: auto 5px Highlight;
	}

	// modifier: mfp close button when inside the content container
	.mfp-close-btn-in & {
		@include bb-size($width: $popup-close-inside-size, $height: $popup-close-inside-size);
		font-size: $popup-close-inside-font-size;
		line-height: $popup-close-inside-size;
	}
}

// mfp various animateable states
.mfp-animate {
	// mfp background overlay
	&.mfp-bg {
		@include bb-prefix-transition($popup-transition);
		opacity: 0;

		// bg state modifier
		&.mfp-ready {
			opacity: $popup-overlay-opacity;
		}

		// bg state modifier
		&.mfp-removing {
			opacity: 0;
		}
	}

	// mfp main wrapper
	&.mfp-wrap {
		// child
		& .mfp-content {
			@include bb-prefix-transform(scale(0.5, 0.5));
			@include bb-prefix-transition($popup-transition);
			opacity: 0;
		}

		// content state modifier
		&.mfp-ready .mfp-content {
			@include bb-prefix-transform(none);
			opacity: 1;
			transform: none;
		}

		// content state modifier
		&.mfp-removing .mfp-content {
			@include bb-prefix-transform(scale(0.5, 0.5));
			opacity: 0;
		}

		// content state modifier
		&.mfp-removing .mfp-close {
			opacity: 0;
		}
	}
}
